<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.7.0.19" timeStamp="2017-12-07T14:37:40.457+01:00" target="JS">
 <co id="0" binds="">
  <globalVariable name="Q{}RESULT_SORTKEYS_PROPERTY" type="xs:string" line="41" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="result-sortkeys"/>
  </globalVariable>
 </co>
 <co id="1" binds="2">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-formdiv-inputs-and-selects" line="15" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="7" flags="pU" as="element(Q{}inputs-and-selects)" slots="1">
   <arg name="formdiv" as="element()"/>
   <elem role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="18" name="inputs-and-selects" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
    <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}create-input-or-select-elements" tailCall="false" bSlot="0" eval="7">
     <treat as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==''&amp;&amp;q.local=='div';" diag="0|0||ivdnt:create-input-or-select-elements">
      <varRef name="formdiv" slot="0"/>
     </treat>
    </ufCall>
   </elem>
  </function>
 </co>
 <co id="3" binds="4 5">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}reactivate-tab" flags="os" line="99" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="100">
    <param name="tabdiv" slot="0" flags="r" as="element(Q{}div)">
     <treat role="conversion" as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="8|0|XTTE0590|tabdiv">
      <check card="1" diag="8|0|XTTE0590|tabdiv">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <forEach line="101">
     <varRef name="tabdiv" slot="0"/>
     <sequence line="104">
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
       <str val="class"/>
       <cvUntyped to="xs:string">
        <data>
         <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="0" eval="8 0">
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <str val="gtb-disabled"/>
         </ufCall>
        </data>
       </cvUntyped>
      </ifCall>
      <forEach line="111">
       <filter flags="b">
        <axis name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
        <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
         <fn name="index-of">
          <fn name="tokenize">
           <fn name="string">
            <axis baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="111" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           </fn>
           <str val="\s+"/>
           <str val=""/>
          </fn>
          <str val="gtb-wait"/>
         </fn>
        </fn>
       </filter>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="114" name="ixsl:set-attribute" type="item()*">
        <str val="class"/>
        <cvUntyped to="xs:string">
         <data>
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" tailCall="false" bSlot="1" eval="8 0">
           <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           <str val="gtb-hidden"/>
          </ufCall>
         </data>
        </cvUntyped>
       </ifCall>
      </forEach>
     </sequence>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id="6" binds="7 8">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-after-select" flags="os" line="61" module="file:/D:/code/GTB-html/source/xslt/events.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="62">
    <param name="textfield" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|textfield">
      <check card="1" diag="8|0|XTTE0590|textfield">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="63" name="for-click" slot="1" flags="r" as="xs:boolean">
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|for-click">
      <check card="1" diag="8|0|XTTE0590|for-click">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <choose line="65">
     <fn name="not">
      <varRef name="for-click" slot="1"/>
     </fn>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="69" name="ivdnt:doe-zoeken" bSlot="0">
      <withParam name="formdiv" flags="c" as="element(Q{}div)">
       <check line="66" card="1" diag="3|0|XTTE0570|formdiv">
        <filter flags="b">
         <slash simple="1">
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" tailCall="false" bSlot="1" eval="6">
           <varRef name="textfield" slot="0"/>
          </ufCall>
          <axis line="67" name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
         </slash>
         <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
          <fn name="index-of">
           <fn name="tokenize">
            <fn name="string">
             <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="67" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            </fn>
            <str val="\s+"/>
            <str val=""/>
           </fn>
           <str val="zoek-formulier"/>
          </fn>
         </fn>
        </filter>
       </check>
      </withParam>
     </callT>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="9" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-target-input" line="329" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="7" flags="pU" as="element(Q{}input)" slots="1">
   <arg name="data-target-id" as="xs:string"/>
   <check role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="331" card="1" diag="5|0|XTTE0780|ivdnt:get-target-input">
    <docOrder intra="1">
     <slash>
      <slash simple="1">
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
       <axis name="descendant-or-self" nodeTest="node()" jsTest="return true;"/>
      </slash>
      <first>
       <filter flags="">
        <axis name="child" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
        <vc op="eq" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}data-modal-target-id)" jsTest="return item.name=='data-modal-target-id'"/>
         </data>
         <varRef name="data-target-id" slot="0"/>
        </vc>
       </filter>
      </first>
     </slash>
    </docOrder>
   </check>
  </function>
 </co>
 <co id="10" vis="PUBLIC" binds="">
  <globalParam name="Q{}dictionaryOutputOrder" type="item()*" line="0" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="ONW VMNW MNW WNT WFT"/>
  </globalParam>
 </co>
 <co id="11" binds="12 13 12 13 12 13 12 13">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-question-description" line="100" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="3" flags="pU" as="node()+" slots="5">
   <arg name="inputs-and-selects-element" as="element(Q{}inputs-and-selects)"/>
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="102" var="textspans" as="element(Q{}span)*" slot="1" eval="3">
    <treat line="103" as="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';" diag="3|0|XTTE0570|textspans">
     <applyT mode="Q{}geschiedenis-lijst" bSlot="0">
      <sort role="select">
       <filter role="select" flags="b">
        <slash simple="1">
         <varRef name="inputs-and-selects-element" slot="0"/>
         <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
        </slash>
        <and op="and">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
         </data>
         <fn line="87" name="exists">
          <filter flags="b">
           <dot line="103" type="element(Q{}input-or-select)"/>
           <or op="or">
            <vc op="eq" onEmpty="0" comp="CCC">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
             </data>
             <str val="text"/>
            </vc>
            <vc op="eq" onEmpty="0" comp="CCC">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}element)" jsTest="return item.name=='element'"/>
             </data>
             <str val="select"/>
            </vc>
           </or>
          </filter>
         </fn>
        </and>
       </filter>
       <sortKey line="104" comp="NC">
        <ufCall role="select" name="Q{http://www.ivdnt.org/xslt/namespaces}input-or-select-sort-value" tailCall="false" bSlot="1" eval="7">
         <dot type="element(Q{}input-or-select)"/>
        </ufCall>
        <str role="order" val="ascending"/>
        <str role="dataType" val="number"/>
        <str role="lang" val=""/>
        <str role="caseOrder" val="#default"/>
        <str role="stable" val="yes"/>
        <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
       </sortKey>
      </sort>
     </applyT>
    </treat>
    <let line="107" var="wdbspans" as="element(Q{}span)*" slot="2" eval="3">
     <treat line="108" as="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';" diag="3|0|XTTE0570|wdbspans">
      <applyT mode="Q{}geschiedenis-lijst" bSlot="2">
       <sort role="select">
        <filter role="select" flags="b">
         <slash simple="1">
          <varRef name="inputs-and-selects-element" slot="0"/>
          <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
         </slash>
         <and op="and">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
          </data>
          <fn line="92" name="exists">
           <filter flags="b">
            <dot line="108" type="element(Q{}input-or-select)"/>
            <and op="and">
             <vc op="eq" onEmpty="0" comp="CCC">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
              </data>
              <str val="checkbox"/>
             </vc>
             <vc op="eq" onEmpty="0" comp="CCC">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
              </data>
              <str val="wdb"/>
             </vc>
            </and>
           </filter>
          </fn>
         </and>
        </filter>
        <sortKey line="109" comp="NC">
         <ufCall role="select" name="Q{http://www.ivdnt.org/xslt/namespaces}input-or-select-sort-value" tailCall="false" bSlot="3" eval="7">
          <dot type="element(Q{}input-or-select)"/>
         </ufCall>
         <str role="order" val="ascending"/>
         <str role="dataType" val="number"/>
         <str role="lang" val=""/>
         <str role="caseOrder" val="#default"/>
         <str role="stable" val="yes"/>
         <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
        </sortKey>
       </sort>
      </applyT>
     </treat>
     <let line="112" var="domeinspans" as="element(Q{}span)*" slot="3" eval="3">
      <treat line="113" as="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';" diag="3|0|XTTE0570|domeinspans">
       <applyT mode="Q{}geschiedenis-lijst" bSlot="4">
        <sort role="select">
         <filter role="select" flags="b">
          <slash simple="1">
           <varRef name="inputs-and-selects-element" slot="0"/>
           <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
          </slash>
          <and op="and">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
           </data>
           <fn line="97" name="exists">
            <filter flags="b">
             <dot line="113" type="element(Q{}input-or-select)"/>
             <and op="and">
              <vc op="eq" onEmpty="0" comp="CCC">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
               </data>
               <str val="radio"/>
              </vc>
              <vc op="eq" onEmpty="0" comp="CCC">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
               </data>
               <str val="domein"/>
              </vc>
             </and>
            </filter>
           </fn>
          </and>
         </filter>
         <sortKey line="114" comp="NC">
          <ufCall role="select" name="Q{http://www.ivdnt.org/xslt/namespaces}input-or-select-sort-value" tailCall="false" bSlot="5" eval="7">
           <dot type="element(Q{}input-or-select)"/>
          </ufCall>
          <str role="order" val="ascending"/>
          <str role="dataType" val="number"/>
          <str role="lang" val=""/>
          <str role="caseOrder" val="#default"/>
          <str role="stable" val="yes"/>
          <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
         </sortKey>
        </sort>
       </applyT>
      </treat>
      <let line="117" var="otherspans" as="element(Q{}span)*" slot="4" eval="3">
       <treat line="118" as="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';" diag="3|0|XTTE0570|otherspans">
        <applyT mode="Q{}geschiedenis-lijst" bSlot="6">
         <sort role="select">
          <filter role="select" flags="b">
           <slash simple="1">
            <varRef name="inputs-and-selects-element" slot="0"/>
            <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
           </slash>
           <and op="and">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
            </data>
            <and op="and">
             <and line="87" op="and">
              <fn name="not">
               <fn name="exists">
                <filter flags="b">
                 <dot line="118" type="element(Q{}input-or-select)"/>
                 <or op="or">
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <data>
                    <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
                   </data>
                   <str val="text"/>
                  </vc>
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <data>
                    <axis name="attribute" nodeTest="attribute(Q{}element)" jsTest="return item.name=='element'"/>
                   </data>
                   <str val="select"/>
                  </vc>
                 </or>
                </filter>
               </fn>
              </fn>
              <fn line="92" name="not">
               <fn name="exists">
                <filter flags="b">
                 <dot line="118" type="element(Q{}input-or-select)"/>
                 <and op="and">
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <data>
                    <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
                   </data>
                   <str val="checkbox"/>
                  </vc>
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <data>
                    <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
                   </data>
                   <str val="wdb"/>
                  </vc>
                 </and>
                </filter>
               </fn>
              </fn>
             </and>
             <fn line="97" name="empty">
              <filter flags="b">
               <dot line="118" type="element(Q{}input-or-select)"/>
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
                 </data>
                 <str val="radio"/>
                </vc>
                <vc op="eq" onEmpty="0" comp="CCC">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
                 </data>
                 <str val="domein"/>
                </vc>
               </and>
              </filter>
             </fn>
            </and>
           </and>
          </filter>
          <sortKey line="119" comp="NC">
           <ufCall role="select" name="Q{http://www.ivdnt.org/xslt/namespaces}input-or-select-sort-value" tailCall="false" bSlot="7" eval="7">
            <dot type="element(Q{}input-or-select)"/>
           </ufCall>
           <str role="order" val="ascending"/>
           <str role="dataType" val="number"/>
           <str role="lang" val=""/>
           <str role="caseOrder" val="#default"/>
           <str role="stable" val="yes"/>
           <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
          </sortKey>
         </sort>
        </applyT>
       </treat>
       <check line="123" card="+" diag="5|0|XTTE0780|ivdnt:get-question-description">
        <sequence>
         <forEach>
          <varRef name="textspans" slot="1"/>
          <sequence line="124">
           <copyOf flags="vsc">
            <dot type="element(Q{}span)"/>
           </copyOf>
           <choose line="125">
            <isLast test="0"/>
            <valueOf flags="e">
             <str val=", "/>
            </valueOf>
           </choose>
          </sequence>
         </forEach>
         <valueOf line="127" flags="e">
          <str val="; zoek in: "/>
         </valueOf>
         <forEach line="128">
          <varRef name="wdbspans" slot="2"/>
          <sequence line="129">
           <copyOf flags="vsc">
            <dot type="element(Q{}span)"/>
           </copyOf>
           <choose line="130">
            <isLast test="0"/>
            <valueOf flags="e">
             <str val=" / "/>
            </valueOf>
           </choose>
          </sequence>
         </forEach>
         <choose line="132">
          <fn name="exists">
           <varRef name="domeinspans" slot="3"/>
          </fn>
          <sequence>
           <valueOf flags="e">
            <str val="; "/>
           </valueOf>
           <forEach line="133">
            <varRef name="domeinspans" slot="3"/>
            <sequence line="135">
             <copyOf flags="vsc">
              <dot type="element(Q{}span)"/>
             </copyOf>
             <choose line="136">
              <isLast test="0"/>
              <valueOf flags="e">
               <str val=" "/>
              </valueOf>
             </choose>
            </sequence>
           </forEach>
          </sequence>
         </choose>
         <choose line="139">
          <fn name="exists">
           <varRef name="otherspans" slot="4"/>
          </fn>
          <sequence line="140">
           <valueOf flags="e">
            <str val="; "/>
           </valueOf>
           <forEach line="141">
            <varRef name="otherspans" slot="4"/>
            <sequence line="142">
             <copyOf flags="vsc">
              <dot type="element(Q{}span)"/>
             </copyOf>
             <choose line="143">
              <isLast test="0"/>
              <valueOf flags="e">
               <str val=",  "/>
              </valueOf>
             </choose>
            </sequence>
           </forEach>
          </sequence>
         </choose>
        </sequence>
       </check>
      </let>
     </let>
    </let>
   </let>
  </function>
 </co>
 <co id="14" binds="15 16 17">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-normal-key" flags="os" line="190" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="191">
    <param name="textfield" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|textfield">
      <check card="1" diag="8|0|XTTE0590|textfield">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="193" var="ul" as="element(Q{}ul)" slot="1" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-ul" tailCall="false" bSlot="0" eval="6">
      <varRef name="textfield" slot="0"/>
     </ufCall>
     <sequence line="195">
      <forEach>
       <slash>
        <slash simple="1">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
         <axis name="child" nodeTest="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='html';"/>
        </slash>
        <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='body';"/>
       </slash>
       <sequence line="196">
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
         <str val="typeahead-active-ul"/>
         <str val=""/>
        </ifCall>
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="197" name="ixsl:set-property" type="item()*">
         <str val="typeahead-active-ul"/>
         <varRef name="ul" slot="1"/>
         <dot type="element(Q{}body)"/>
        </ifCall>
       </sequence>
      </forEach>
      <forEach line="199">
       <varRef name="ul" slot="1"/>
       <sequence line="201">
        <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" name="ivdnt:typeahead-insert-listitems" bSlot="1">
         <withParam name="text-field" flags="c" as="element(Q{}input)">
          <varRef line="202" name="textfield" slot="0"/>
         </withParam>
        </callT>
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="205" name="ixsl:set-style" type="item()*">
         <str val="display"/>
         <choose>
          <ufCall line="204" name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="2" eval="6">
           <varRef name="textfield" slot="0"/>
          </ufCall>
          <str val="block"/>
          <true/>
          <str val="none"/>
         </choose>
         <dot type="element(Q{}ul)"/>
        </ifCall>
       </sequence>
      </forEach>
     </sequence>
    </let>
   </sequence>
  </template>
 </co>
 <co id="13" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}input-or-select-sort-value" line="71" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="7" flags="pU" as="xs:integer" slots="1">
   <arg name="input-or-select" as="element(Q{}input-or-select)"/>
   <choose role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="75">
    <gcEE op="=" card="N:1" comp="CCC">
     <literal count="2">
      <str val="checkbox"/>
      <str val="radio"/>
     </literal>
     <data>
      <slash simple="1">
       <varRef name="input-or-select" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
      </slash>
     </data>
    </gcEE>
    <int val="10"/>
    <vc line="76" op="eq" onEmpty="0" comp="CCC">
     <data>
      <slash simple="1">
       <varRef name="input-or-select" slot="0"/>
       <axis name="attribute" nodeTest="attribute(Q{}element)" jsTest="return item.name=='element'"/>
      </slash>
     </data>
     <str val="select"/>
    </vc>
    <int val="5"/>
    <true/>
    <int val="1"/>
   </choose>
  </function>
 </co>
 <co id="18" binds="15 19 20 21 6 21 15 22 15 23 15">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-special-key" flags="os" line="210" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" slots="3">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="211">
    <param name="textfield" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|textfield">
      <check card="1" diag="8|0|XTTE0590|textfield">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="212" name="whichKey" slot="1" flags="r" as="xs:integer">
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|whichKey">
      <check card="1" diag="8|0|XTTE0590|whichKey">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <choose line="215">
     <compareToInt op="eq" val="13">
      <varRef name="whichKey" slot="1"/>
     </compareToInt>
     <let line="217" var="ul" as="element(Q{}ul)" slot="2" eval="7">
      <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-ul" tailCall="false" bSlot="0" eval="7">
       <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="0|0||ivdnt:get-my-typeahead-ul">
        <dot flags="a"/>
       </treat>
      </ufCall>
      <sequence line="218">
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" name="ivdnt:typeahead-select" bSlot="1">
        <withParam name="selected-listitem" flags="c" as="element(Q{}li)">
         <ufCall line="219" name="Q{http://www.ivdnt.org/xslt/namespaces}find-active-li" tailCall="false" bSlot="2" eval="6">
          <varRef name="ul" slot="2"/>
         </ufCall>
        </withParam>
       </callT>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="221" name="ivdnt:typeahead-hide" bSlot="3">
        <withParam name="ul" flags="c" as="element(Q{}ul)">
         <varRef line="222" name="ul" slot="2"/>
        </withParam>
       </callT>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="224" name="ivdnt:typeahead-after-select" bSlot="4">
        <withParam name="textfield" flags="c" as="element(Q{}input)">
         <varRef line="225" name="textfield" slot="0"/>
        </withParam>
        <withParam name="for-click" flags="c" as="xs:boolean">
         <false/>
        </withParam>
       </callT>
      </sequence>
     </let>
     <compareToInt line="229" op="eq" val="27">
      <varRef name="whichKey" slot="1"/>
     </compareToInt>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="231" name="ivdnt:typeahead-hide" bSlot="5">
      <withParam name="ul" flags="c" as="element(Q{}ul)">
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-ul" tailCall="false" bSlot="6" eval="7">
        <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="0|0||ivdnt:get-my-typeahead-ul">
         <dot flags="a"/>
        </treat>
       </ufCall>
      </withParam>
     </callT>
     <compareToInt line="233" op="eq" val="38">
      <varRef name="whichKey" slot="1"/>
     </compareToInt>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="235" name="ivdnt:typeahead-previous-value" bSlot="7">
      <withParam name="ul" flags="c" as="element(Q{}ul)">
       <ufCall line="236" name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-ul" tailCall="false" bSlot="8" eval="7">
        <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="0|0||ivdnt:get-my-typeahead-ul">
         <dot flags="a"/>
        </treat>
       </ufCall>
      </withParam>
     </callT>
     <compareToInt line="239" op="eq" val="40">
      <varRef name="whichKey" slot="1"/>
     </compareToInt>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="241" name="ivdnt:typeahead-next-value" bSlot="9">
      <withParam name="ul" flags="c" as="element(Q{}ul)">
       <ufCall line="242" name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-ul" tailCall="false" bSlot="10" eval="7">
        <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="0|0||ivdnt:get-my-typeahead-ul">
         <dot flags="a"/>
        </treat>
       </ufCall>
      </withParam>
     </callT>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="5" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" line="22" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="7" flags="pU" as="attribute(Q{}class)" slots="2">
   <arg name="classlike-attr" as="attribute()?"/>
   <arg name="values-to-be-added" as="xs:string*"/>
   <treat role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="27" as="attribute(Q{}class)" jsTest="return item.name=='class'" diag="5|0|XTTE0780|ivdnt:add-class-values">
    <att name="class">
     <fn name="string-join">
      <fn name="distinct-values">
       <check line="25" card="+" diag="3|0|XTTE0570|newvalue">
        <sequence>
         <fn name="tokenize">
          <fn name="string">
           <varRef name="classlike-attr" slot="0"/>
          </fn>
          <str val="\s+"/>
          <str val=""/>
         </fn>
         <varRef name="values-to-be-added" slot="1"/>
        </sequence>
       </check>
      </fn>
      <str val=" "/>
     </fn>
    </att>
   </treat>
  </function>
 </co>
 <co id="24" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}is-domein-field" line="95" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="8" flags="pU" as="xs:boolean" slots="1">
   <arg name="input" as="element(Q{}input-or-select)"/>
   <fn role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="97" name="exists">
    <filter flags="b">
     <varRef name="input" slot="0"/>
     <and op="and">
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
       </data>
       <str val="radio"/>
      </vc>
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
       </data>
       <str val="domein"/>
      </vc>
     </and>
    </filter>
   </fn>
  </function>
 </co>
 <co id="25" binds="">
  <globalVariable name="Q{}CURRENT_QUESTION_DESCRIPTION_PROPERTY" type="xs:string" line="38" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="current-question-description"/>
  </globalVariable>
 </co>
 <co id="4" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" line="30" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="7" flags="pU" as="attribute(Q{}class)" slots="4">
   <arg name="classlike-attr" as="attribute()?"/>
   <arg name="value-to-be-removed" as="xs:string"/>
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="33" var="class-as-seq" as="xs:string*" slot="2" eval="3">
    <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|class-as-seq">
     <cvUntyped to="xs:string">
      <fn name="distinct-values">
       <fn name="tokenize">
        <fn name="string">
         <varRef name="classlike-attr" slot="0"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
      </fn>
     </cvUntyped>
    </treat>
    <let line="34" var="index" as="xs:integer?" slot="3" eval="7">
     <check card="?" diag="3|0|XTTE0570|index">
      <fn name="index-of">
       <varRef name="class-as-seq" slot="2"/>
       <varRef name="value-to-be-removed" slot="1"/>
      </fn>
     </check>
     <treat line="36" as="attribute(Q{}class)" jsTest="return item.name=='class'" diag="5|0|XTTE0780|ivdnt:remove-class-value">
      <att name="class">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <choose>
          <fn name="empty">
           <varRef name="index" slot="3"/>
          </fn>
          <data>
           <varRef name="classlike-attr" slot="0"/>
          </data>
          <true/>
          <fn name="string-join">
           <fn name="remove">
            <varRef name="class-as-seq" slot="2"/>
            <check card="1" diag="0|1||remove">
             <varRef name="index" slot="3"/>
            </check>
           </fn>
           <str val=" "/>
          </fn>
         </choose>
        </convert>
        <str val=" "/>
       </fn>
      </att>
     </treat>
    </let>
   </let>
  </function>
 </co>
 <co id="26" binds="">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}check" flags="os" line="57" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="58">
    <param name="checkbox" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|checkbox">
      <check card="1" diag="8|0|XTTE0590|checkbox">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="59" name="ixsl:set-property" type="item()*">
     <str val="checked"/>
     <true/>
     <varRef name="checkbox" slot="0"/>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="27" binds="">
  <globalVariable name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-active-ul" type="xs:string" line="58" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="typeahead-active-ul"/>
  </globalVariable>
 </co>
 <co id="22" binds="20 19">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-previous-value" flags="os" line="249" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="250">
    <param name="ul" slot="0" flags="r" as="element(Q{}ul)">
     <treat role="conversion" as="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';" diag="8|0|XTTE0590|ul">
      <check card="1" diag="8|0|XTTE0590|ul">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="251" var="active-li" as="element(Q{}li)" slot="1" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}find-active-li" tailCall="false" bSlot="0" eval="6">
      <varRef name="ul" slot="0"/>
     </ufCall>
     <forEach line="252">
      <slash simple="1">
       <varRef name="ul" slot="0"/>
       <axis name="child" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
      </slash>
      <choose line="254">
       <is op="is">
        <first>
         <axis name="following-sibling" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
        </first>
        <varRef name="active-li" slot="1"/>
       </is>
       <sequence line="255">
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
         <str val="class"/>
         <str val="active"/>
        </ifCall>
        <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="256" name="ivdnt:typeahead-select" bSlot="1">
         <withParam name="selected-listitem" flags="c" as="item()">
          <dot line="257" type="element(Q{}li)"/>
         </withParam>
        </callT>
       </sequence>
       <fn line="260" name="exists">
        <slash simple="1">
         <dot type="element(Q{}li)"/>
         <axis name="preceding-sibling" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
        </slash>
       </fn>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="261" name="ixsl:remove-attribute" type="item()*">
        <str val="class"/>
        <str val=""/>
       </ifCall>
      </choose>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id="28" binds="">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="57" module="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt">
    <p.nodeTest role="match" test="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="59" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <choose>
       <fn name="empty">
        <slash simple="1">
         <dot type="element(Q{}result)"/>
         <axis name="preceding-sibling" nodeTest="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
        </slash>
       </fn>
       <att line="60" name="class" flags="l">
        <str val="active"/>
       </att>
      </choose>
      <elem line="62" name="a" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="dropdown-item"/>
        </att>
        <att name="href" flags="l">
         <str val="#"/>
        </att>
        <att name="role" flags="l">
         <str val="option"/>
        </att>
        <elem name="span" flags="l">
         <sequence>
          <att name="class" flags="l">
           <str val="gtb-typeahead-word"/>
          </att>
          <valueOf flags="el">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}Lemma)" jsTest="return item.name=='Lemma'"/>
            </data>
           </convert>
          </valueOf>
         </sequence>
        </elem>
        <elem name="span" flags="l">
         <sequence>
          <att name="class" flags="l">
           <str val="gtb-typeahead-wdb"/>
          </att>
          <valueOf flags="el">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}Wdb)" jsTest="return item.name=='Wdb'"/>
            </data>
           </convert>
          </valueOf>
         </sequence>
        </elem>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id="29" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-typeahead-value-from-listitem" line="40" module="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="listitem" as="element(Q{}li)"/>
   <cvUntyped role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="42" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="string">
      <check card="?" diag="0|0||string">
       <filter flags="">
        <slash>
         <slash simple="1">
          <varRef name="listitem" slot="0"/>
          <axis name="child" nodeTest="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
         </slash>
         <axis name="child" nodeTest="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';"/>
        </slash>
        <vc op="eq" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         </data>
         <str val="gtb-typeahead-word"/>
        </vc>
       </filter>
      </check>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="30" binds="31 32 33">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-zoeken-url" line="319" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="8" flags="pU" as="xs:string" slots="2">
   <arg name="text-input-uri-params" as="xs:string"/>
   <arg name="formdiv-inputs-and-selects" as="element(Q{}inputs-and-selects)"/>
   <cvUntyped role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="326" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="concat">
      <fn name="concat">
       <fn name="concat">
        <fn name="concat">
         <fn name="concat">
          <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg979012785" bSlot="0"/>
          <varRef name="text-input-uri-params" slot="0"/>
         </fn>
         <str val="&amp;wdb="/>
        </fn>
        <ufCall line="322" name="Q{http://www.ivdnt.org/xslt/namespaces}get-wdb-inputs-for-url" tailCall="false" bSlot="1" eval="6">
         <varRef name="formdiv-inputs-and-selects" slot="1"/>
        </ufCall>
       </fn>
       <str val="&amp;"/>
      </fn>
      <ufCall line="323" name="Q{http://www.ivdnt.org/xslt/namespaces}get-sensitivity-for-url" tailCall="false" bSlot="2" eval="6">
       <varRef name="formdiv-inputs-and-selects" slot="1"/>
      </ufCall>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="34" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}add-formdiv-inputs-and-selects" line="58" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="7" flags="pU" as="element(Q{}inputs-and-selects-list)" slots="2">
   <arg name="tabdiv" as="element(Q{}div)"/>
   <arg name="formdiv-inputs-and-selects" as="element(Q{}inputs-and-selects)"/>
   <elem role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="66" name="inputs-and-selects-list" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
    <sequence>
     <copyOf flags="vsc">
      <slash line="63" simple="1">
       <treat as="element(Q{}inputs-and-selects-list)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='inputs-and-selects-list';" diag="3|0|XTTE0570|existing-inputs-and-selects-list">
        <check card="?" diag="3|0|XTTE0570|existing-inputs-and-selects-list">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
          <varRef name="tabdiv" slot="0"/>
          <str val="formdiv-inputs-and-selects"/>
         </ifCall>
        </check>
       </treat>
       <axis line="66" name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
     </copyOf>
     <copyOf line="67" flags="vsc">
      <varRef name="formdiv-inputs-and-selects" slot="1"/>
     </copyOf>
    </sequence>
   </elem>
  </function>
 </co>
 <co id="35" binds="36">
  <template name="Q{}parse-result-attributes" flags="os" line="273" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" slots="0">
   <try role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="278">
    <applyT mode="Q{}parse-result-attribute" bSlot="0">
     <fn role="select" name="parse-xml-fragment">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||parse-xml-fragment">
       <check card="1" diag="0|0||parse-xml-fragment">
        <cvUntyped to="xs:string">
         <data>
          <dot flags="a"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
    </applyT>
    <catch err="node()" test="true">
     <elem line="280" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <sequence>
       <att name="class" flags="l">
        <str val="gtb-xml-error"/>
       </att>
       <valueOf flags="l">
        <fn name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <data>
           <dot flags="a"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </catch>
   </try>
  </template>
 </co>
 <co id="37" vis="PUBLIC" binds="">
  <globalParam name="Q{}showInputsAndSelectsXML" type="xs:boolean" line="0" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalParam>
 </co>
 <co id="38" binds="">
  <template name="Q{}initialize" flags="os" line="63" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="0">
   <empty role="body"/>
  </template>
 </co>
 <co id="16" binds="8 39 17 40 40 41">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-insert-listitems" flags="os" line="13" module="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" slots="3">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="14">
    <param name="text-field" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|text-field">
      <check card="1" diag="8|0|XTTE0590|text-field">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="19" var="tabdiv" as="element(Q{}div)" slot="1" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" tailCall="false" bSlot="0" eval="7">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||ivdnt:get-active-tabdiv">
       <dot flags="a"/>
      </treat>
     </ufCall>
     <let line="31" var="url" as="xs:string" slot="2" eval="8">
      <fn name="concat">
       <fn name="concat">
        <fn name="concat">
         <fn name="concat">
          <fn name="concat">
           <fn name="concat">
            <fn name="concat">
             <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg254878225" bSlot="1"/>
             <check line="16" card="1" diag="3|0|XTTE0570|textfield-name">
              <cvUntyped to="xs:string">
               <data>
                <slash simple="1">
                 <varRef name="text-field" slot="0"/>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </slash>
               </data>
              </cvUntyped>
             </check>
            </fn>
            <str val="&amp;prefix="/>
           </fn>
           <fn name="encode-for-uri">
            <ufCall line="17" name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="2" eval="6">
             <varRef name="text-field" slot="0"/>
            </ufCall>
           </fn>
          </fn>
          <str val="&amp;wdb="/>
         </fn>
         <fn line="23" name="string-join">
          <cvUntyped to="xs:string">
           <data>
            <forEach>
             <filter flags="b">
              <slash simple="1">
               <varRef name="tabdiv" slot="1"/>
               <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
              </slash>
              <and op="and">
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
                 </data>
                 <str val="checkbox"/>
                </vc>
                <vc op="eq" onEmpty="0" comp="CCC">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
                 </data>
                 <str val="wdb"/>
                </vc>
               </and>
               <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="3" eval="7">
                <dot type="element(Q{}input)"/>
               </ufCall>
              </and>
             </filter>
             <valueOf line="24">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
               </data>
              </convert>
             </valueOf>
            </forEach>
           </data>
          </cvUntyped>
          <str val=","/>
         </fn>
        </fn>
        <str val="&amp;sensitive="/>
       </fn>
       <cast line="27" as="xs:string" emptiable="0">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="4" eval="4">
         <check card="1" diag="3|0|XTTE0570|sensitivity-input">
          <filter flags="">
           <slash simple="1">
            <varRef name="tabdiv" slot="1"/>
            <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
           </slash>
           <vc op="eq" comp="CCC">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
            </data>
            <str val="sensitive"/>
           </vc>
          </filter>
         </check>
        </ufCall>
       </cast>
      </fn>
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="33" name="ixsl:schedule-action" type="item()*">
       <int val="0"/>
       <varRef name="url" slot="2"/>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="34" name="ivdnt:retrieve-typeahead-listitems" bSlot="5">
        <withParam name="url" flags="c" as="xs:string">
         <varRef line="35" name="url" slot="2"/>
        </withParam>
       </callT>
      </ifCall>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="42" vis="PUBLIC" binds="">
  <globalParam name="Q{}baseArticleURL" type="xs:string" line="0" visibility="PUBLIC" flags="r" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};"/>
 </co>
 <co id="43" binds="">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-update-textbox" flags="os" line="286" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="287">
    <param name="textbox" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|textbox">
      <check card="1" diag="8|0|XTTE0590|textbox">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="288" name="value" slot="1" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|value">
      <check card="1" diag="8|0|XTTE0590|value">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="290" name="ixsl:set-property" type="item()*">
     <str val="value"/>
     <varRef name="value" slot="1"/>
     <varRef name="textbox" slot="0"/>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="44" binds="45 46">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}export-result" flags="os" line="182" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="3">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="183">
    <param name="url-for-content" slot="0" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|url-for-content">
      <check card="1" diag="8|0|XTTE0590|url-for-content">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="184" name="client-filename" slot="1" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|client-filename">
      <check card="1" diag="8|0|XTTE0590|client-filename">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="185" name="mimetype" slot="2" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|mimetype">
      <check card="1" diag="8|0|XTTE0590|mimetype">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <filter line="187" flags="ib">
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:call" type="item()*">
      <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1895054717" bSlot="0"/>
      <str val="exportResult"/>
      <arrayBlock>
       <varRef name="url-for-content" slot="0"/>
       <varRef name="client-filename" slot="1"/>
       <varRef name="mimetype" slot="2"/>
      </arrayBlock>
     </ifCall>
     <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1785880895" bSlot="1"/>
    </filter>
   </sequence>
  </template>
 </co>
 <co id="47" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}class-contains" line="16" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="8" flags="pU" as="xs:boolean" slots="2">
   <arg name="class" as="attribute(Q{}class)?"/>
   <arg name="required-value" as="xs:string"/>
   <fn role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
    <fn name="index-of">
     <fn name="tokenize">
      <fn name="string">
       <varRef name="class" slot="0"/>
      </fn>
      <str val="\s+"/>
      <str val=""/>
     </fn>
     <varRef name="required-value" slot="1"/>
    </fn>
   </fn>
  </function>
 </co>
 <co id="48" binds="49 7">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onkeypress" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="30" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
     <and vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="30" op="and">
      <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
       <fn name="index-of">
        <fn name="tokenize">
         <fn name="string">
          <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="30" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         </fn>
         <str val="\s+"/>
         <str val=""/>
        </fn>
        <str val="zoek-formulier"/>
       </fn>
      </fn>
      <fn name="not">
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-is-ul-active" tailCall="false" bSlot="0"/>
      </fn>
     </and>
    </p.withPredicate>
    <choose role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="32">
     <vc op="eq" onEmpty="0" comp="CAVC">
      <cast as="xs:integer" emptiable="1">
       <atomSing card="?" diag="2|0||cast as">
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
         <ifCall line="31" name="ixsl:event" type="item()?"/>
         <str val="which"/>
        </ifCall>
       </atomSing>
      </cast>
      <int val="13"/>
     </vc>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="34" name="ivdnt:doe-zoeken" bSlot="1">
      <withParam name="formdiv" flags="c" as="item()">
       <dot line="35" type="element(Q{}div)"/>
      </withParam>
     </callT>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="50" vis="PUBLIC" binds="">
  <globalParam name="Q{}baseSearchURL" type="xs:string" line="0" visibility="PUBLIC" flags="r" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};"/>
 </co>
 <co id="51" binds="17 17">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onchange" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="0" rank="0" minImp="0" slots="5" flags="os" line="148" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="148" name="matches">
      <cvUntyped to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
       </data>
      </cvUntyped>
      <str val="^sleutel[1-4]$"/>
      <str val=""/>
     </fn>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="149" var="thisSelect" as="element(Q{}select)" slot="0" eval="7">
     <dot type="element(Q{}select)"/>
     <let line="150" var="topdiv" as="element(Q{}div)" slot="1" eval="7">
      <check card="1" diag="3|0|XTTE0570|topdiv">
       <first>
        <filter flags="">
         <slash simple="1">
          <dot type="element(Q{}select)"/>
          <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
         </slash>
         <vc op="eq" comp="CCC">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
          </data>
          <str val="sleutels"/>
         </vc>
        </filter>
       </first>
      </check>
      <let line="151" var="thisSelectValue" as="xs:string" slot="2" eval="7">
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="0" eval="6">
        <varRef name="thisSelect" slot="0"/>
       </ufCall>
       <let line="152" var="allSelectedValues" as="xs:string*" slot="3" eval="3">
        <for var="s" as="element(Q{}select)" slot="4">
         <slash role="in" simple="1">
          <varRef name="topdiv" slot="1"/>
          <axis name="descendant" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
         </slash>
         <ufCall role="return" name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="1" eval="6">
          <varRef name="s" slot="4"/>
         </ufCall>
        </for>
        <forEach line="153">
         <docOrder intra="1">
          <filter flags="b">
           <slash>
            <slash simple="1">
             <varRef name="topdiv" slot="1"/>
             <axis name="descendant" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
            </slash>
            <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='option';"/>
           </slash>
           <fn name="boolean">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
            </data>
           </fn>
          </filter>
         </docOrder>
         <choose line="155">
          <gcEE op="=" card="N:1" comp="CCC">
           <varRef name="allSelectedValues" slot="3"/>
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
           </data>
          </gcEE>
          <choose line="157">
           <and op="and">
            <is op="is">
             <check card="?" diag="1|0||is">
              <axis name="parent" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
             </check>
             <varRef name="thisSelect" slot="0"/>
            </is>
            <vc op="eq" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
             </data>
             <varRef name="thisSelectValue" slot="2"/>
            </vc>
           </and>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="158" name="ixsl:remove-attribute" type="item()*">
            <str val="disabled"/>
            <str val=""/>
           </ifCall>
           <true/>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="161" name="ixsl:set-attribute" type="item()*">
            <str val="disabled"/>
            <str val="disabled"/>
           </ifCall>
          </choose>
          <true/>
          <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="166" name="ixsl:remove-attribute" type="item()*">
           <str val="disabled"/>
           <str val=""/>
          </ifCall>
         </choose>
        </forEach>
       </let>
      </let>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="52" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}strip-hash-from-id" line="52" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="id-with-hash" as="xs:string"/>
   <cvUntyped role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="54" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="substring-after">
      <varRef name="id-with-hash" slot="0"/>
      <str val="#"/>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="2" binds="53 2">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}create-input-or-select-elements" line="22" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="3" flags="pU" as="element()+" slots="1">
   <arg name="formdiv" as="element(Q{}div)"/>
   <check role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="25" card="+" diag="5|0|XTTE0780|ivdnt:create-input-or-select-elements">
    <forEach>
     <filter flags="b">
      <slash simple="1">
       <varRef name="formdiv" slot="0"/>
       <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
      <fn name="exists">
       <sequence>
        <axis name="self" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
        <filter flags="b">
         <axis name="self" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
         <fn name="exists">
          <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
         </fn>
        </filter>
       </sequence>
      </fn>
     </filter>
     <sequence line="30">
      <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}create-input-or-select-element" tailCall="false" bSlot="0" eval="7 6">
       <dot type="element()"/>
       <varRef name="formdiv" slot="0"/>
      </ufCall>
      <choose line="31">
       <vc op="eq" onEmpty="0" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}data-label)" jsTest="return item.name=='data-label'"/>
        </data>
        <str val="Woordsoort"/>
       </vc>
       <elem line="34" name="woordsoort-inputs" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <ufCall line="35" name="Q{http://www.ivdnt.org/xslt/namespaces}create-input-or-select-elements" tailCall="false" bSlot="1" eval="4">
         <treat line="34" as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="3|0|XTTE0570|woordsoort-div">
          <check card="1" diag="3|0|XTTE0570|woordsoort-div">
           <fn name="key">
            <str val="ids"/>
            <cvUntyped baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="54" to="xs:string">
             <cast as="xs:untypedAtomic" emptiable="0">
              <fn name="substring-after">
               <check baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/history.xslt" line="32" card="1" diag="0|0||ivdnt:strip-hash-from-id">
                <cvUntyped to="xs:string">
                 <data>
                  <slash simple="1">
                   <first>
                    <axis name="following-sibling" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
                   </first>
                   <axis name="attribute" nodeTest="attribute(Q{}data-target)" jsTest="return item.name=='data-target'"/>
                  </slash>
                 </data>
                </cvUntyped>
               </check>
               <str val="#"/>
              </fn>
             </cast>
            </cvUntyped>
           </fn>
          </check>
         </treat>
        </ufCall>
       </elem>
      </choose>
     </sequence>
    </forEach>
   </check>
  </function>
 </co>
 <co id="54" binds="37 1 55 56 5 4 4 3">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}render-results" flags="os" line="196" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="5">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="197">
    <param name="url-for-content" slot="0" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|url-for-content">
      <check card="1" diag="8|0|XTTE0590|url-for-content">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="198" name="tabdiv-id" slot="1" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|tabdiv-id">
      <check card="1" diag="8|0|XTTE0590|tabdiv-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="199" name="startline" slot="2" flags="r" as="xs:integer">
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|startline">
      <check card="1" diag="8|0|XTTE0590|startline">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="200" name="originating-tabdiv" slot="3" flags="r" as="element(Q{}div)">
     <treat role="conversion" as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="8|0|XTTE0590|originating-tabdiv">
      <check card="1" diag="8|0|XTTE0590|originating-tabdiv">
       <supplied slot="3"/>
      </check>
     </treat>
    </param>
    <param line="201" name="text-input-uri-params" slot="4" flags="tr" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|text-input-uri-params">
      <check card="1" diag="8|0|XTTE0590|text-input-uri-params">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="4"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <resultDoc line="204" global="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
     <str role="href" val="#resultaathouder"/>
     <sequence role="content" line="205">
      <choose>
       <gVarRef name="Q{}showInputsAndSelectsXML" bSlot="0"/>
       <elem line="209" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS array=http://www.w3.org/2005/xpath-functions/array ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <sequence>
         <elem name="p" flags="l">
          <valueOf flags="el">
           <str val="De XML-lijst met alle inputs en selects"/>
          </valueOf>
         </elem>
         <elem line="210" name="pre" flags="l">
          <copyOf flags="vsc">
           <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-formdiv-inputs-and-selects" tailCall="false" bSlot="1" eval="4">
            <check line="206" card="1" diag="3|0|XTTE0570|originating-formdiv">
             <docOrder intra="1">
              <slash>
               <slash simple="1">
                <varRef name="originating-tabdiv" slot="3"/>
                <axis name="descendant-or-self" nodeTest="node()" jsTest="return true;"/>
               </slash>
               <first>
                <filter flags="b">
                 <axis name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
                 <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" name="exists">
                  <fn name="index-of">
                   <fn name="tokenize">
                    <fn baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" name="string">
                     <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
                    </fn>
                    <str val="\s+"/>
                    <str val=""/>
                   </fn>
                   <str val="zoek-formulier"/>
                  </fn>
                 </fn>
                </filter>
               </first>
              </slash>
             </docOrder>
            </check>
           </ufCall>
          </copyOf>
         </elem>
        </sequence>
       </elem>
      </choose>
      <choose line="213">
       <gVarRef name="Q{}showLinkToSearchResultXml" bSlot="2"/>
       <elem line="215" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS array=http://www.w3.org/2005/xpath-functions/array ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <sequence>
         <elem name="p" flags="l">
          <valueOf flags="el">
           <str val="Dit is de uitgerekende URL:"/>
          </valueOf>
         </elem>
         <elem line="216" name="pre" flags="l">
          <sequence>
           <att name="style" flags="l">
            <str val="font-weight: bold"/>
           </att>
           <elem name="a" flags="l">
            <sequence>
             <att name="target" flags="l">
              <str val="_blank"/>
             </att>
             <att name="href" flags="l">
              <varRef name="url-for-content" slot="0"/>
             </att>
             <valueOf flags="el">
              <varRef name="url-for-content" slot="0"/>
             </valueOf>
            </sequence>
           </elem>
          </sequence>
         </elem>
        </sequence>
       </elem>
      </choose>
      <elem line="224" name="h4" namespaces="xs=http://www.w3.org/2001/XMLSchema ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS array=http://www.w3.org/2005/xpath-functions/array ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-zoekvraag-description"/>
        </att>
        <valueOf flags="el">
         <str val="Zoekvraag = "/>
        </valueOf>
        <copyOf flags="vsc">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
          <ifCall name="ixsl:page" type="document-node()?"/>
          <str val="current-question-description"/>
         </ifCall>
        </copyOf>
       </sequence>
      </elem>
      <applyT line="226" mode="Q{}render-results" bSlot="3">
       <fn role="select" name="doc">
        <varRef name="url-for-content" slot="0"/>
       </fn>
       <withParam name="html" as="element(Q{}html)*">
        <slash line="227" simple="1">
         <root/>
         <axis name="child" nodeTest="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='html';"/>
        </slash>
       </withParam>
       <withParam name="startline" as="xs:integer">
        <varRef line="228" name="startline" slot="2"/>
       </withParam>
      </applyT>
      <forEach line="231">
       <slash>
        <slash line="203" simple="1">
         <treat as="element()" jsTest="return item.nodeType==1;" diag="3|0|XTTE0570|tabdiv">
          <check card="1" diag="3|0|XTTE0570|tabdiv">
           <fn name="key">
            <str val="ids"/>
            <varRef name="tabdiv-id" slot="1"/>
           </fn>
          </check>
         </treat>
         <axis line="231" name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
        </slash>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
       </slash>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="235" name="ixsl:set-attribute" type="item()*">
        <str val="class"/>
        <cvUntyped to="xs:string">
         <data>
          <ufCall line="232" name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" tailCall="false" bSlot="4" eval="7 4">
           <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="5" eval="7 0">
            <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="6" eval="8 0">
             <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
             <str val="active"/>
            </ufCall>
            <str val="in"/>
           </ufCall>
           <choose line="234">
            <vc op="eq" onEmpty="0" comp="CCC">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
             </data>
             <varRef name="tabdiv-id" slot="1"/>
            </vc>
            <literal count="2">
             <str val="in"/>
             <str val="active"/>
            </literal>
           </choose>
          </ufCall>
         </data>
        </cvUntyped>
       </ifCall>
      </forEach>
     </sequence>
    </resultDoc>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="240" name="ixsl:schedule-action" type="item()*">
     <int val="100"/>
     <empty/>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" name="ivdnt:reactivate-tab" bSlot="7">
      <withParam name="tabdiv" flags="c" as="element(Q{}div)">
       <varRef name="originating-tabdiv" slot="3"/>
      </withParam>
     </callT>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="57" vis="PUBLIC" binds="">
  <globalParam name="Q{}maxLinesInResultPage" type="xs:integer" line="0" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="250"/>
  </globalParam>
 </co>
 <co id="58" binds="">
  <globalVariable name="Q{}FOCUSSED_TEXTBOX_PROPERTY" type="xs:string" line="43" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="focussed_textbox-id"/>
  </globalVariable>
 </co>
 <co id="59" binds="5 4">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}deactivate-tab" flags="os" line="68" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="69">
    <param name="tabdiv" slot="0" flags="r" as="element(Q{}div)">
     <treat role="conversion" as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="8|0|XTTE0590|tabdiv">
      <check card="1" diag="8|0|XTTE0590|tabdiv">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <forEach line="70">
     <varRef name="tabdiv" slot="0"/>
     <sequence line="73">
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
       <str val="class"/>
       <cvUntyped to="xs:string">
        <data>
         <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" tailCall="false" bSlot="0" eval="8 0">
          <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          <str val="gtb-disabled"/>
         </ufCall>
        </data>
       </cvUntyped>
      </ifCall>
      <let line="78" var="waitdiv" as="element(Q{}div)?" slot="1" eval="7">
       <check card="?" diag="3|0|XTTE0570|waitdiv">
        <filter flags="b">
         <axis name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
         <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
          <fn name="index-of">
           <fn name="tokenize">
            <fn name="string">
             <axis baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="78" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            </fn>
            <str val="\s+"/>
            <str val=""/>
           </fn>
           <str val="gtb-wait"/>
          </fn>
         </fn>
        </filter>
       </check>
       <choose line="80">
        <fn name="exists">
         <varRef name="waitdiv" slot="1"/>
        </fn>
        <forEach line="83">
         <varRef name="waitdiv" slot="1"/>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
          <str val="class"/>
          <cvUntyped to="xs:string">
           <data>
            <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="1" eval="8 0">
             <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
             <str val="gtb-hidden"/>
            </ufCall>
           </data>
          </cvUntyped>
         </ifCall>
        </forEach>
        <true/>
        <resultDoc line="87" global="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}append-content&#xD;&#xA;">
         <str role="href" val="?."/>
         <elem role="content" line="89" name="div" namespaces="xs=http://www.w3.org/2001/XMLSchema ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS array=http://www.w3.org/2005/xpath-functions/array ivdnt=http://www.ivdnt.org/xslt/namespaces">
          <sequence>
           <att name="class" flags="l">
            <str val="gtb-wait"/>
           </att>
           <elem line="91" name="button" flags="l">
            <sequence>
             <att name="class" flags="l">
              <str val="btn btn-lg btn-info"/>
             </att>
             <elem name="span" flags="l" namespaces="xs=http://www.w3.org/2001/XMLSchema ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS array=http://www.w3.org/2005/xpath-functions/array ivdnt=http://www.ivdnt.org/xslt/namespaces">
              <att name="class" flags="l">
               <str val="gtb-waiticon"/>
              </att>
             </elem>
             <valueOf flags="el">
              <str val=" Even geduld a.u.b. ..."/>
             </valueOf>
            </sequence>
           </elem>
          </sequence>
         </elem>
        </resultDoc>
       </choose>
      </let>
     </sequence>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id="60" binds="17 61 26 5 4 62 63 8 64 64 65 63 8 26 66 8 12 17 40 63 65 44 17 17 40 62 63 7 40 66 9 17 67 64 64 49 21 47 19 21 6 68">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="16" rank="1" minImp="0" slots="5" flags="os" line="268" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}td)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='td';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="268" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="speciaalteken"/>
      </fn>
     </fn>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="269" var="char" as="xs:string" slot="0" eval="7">
     <check card="1" diag="3|0|XTTE0570|char">
      <cvUntyped to="xs:string">
       <data>
        <axis name="child" nodeTest="text()" jsTest="return item.nodeType==3;"/>
       </data>
      </cvUntyped>
     </check>
     <let line="271" var="focussed-textbox" as="element(Q{}input)?" slot="1" eval="7">
      <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="3|0|XTTE0570|focussed-textbox">
       <check card="?" diag="3|0|XTTE0570|focussed-textbox">
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
         <ifCall name="ixsl:page" type="document-node()?"/>
         <str val="focussed_textbox-id"/>
        </ifCall>
       </check>
      </treat>
      <let line="272" var="textbox" as="element(Q{}input)" slot="2" eval="7">
       <choose>
        <fn name="exists">
         <varRef name="focussed-textbox" slot="1"/>
        </fn>
        <check card="1" diag="3|0|XTTE0570|textbox">
         <varRef name="focussed-textbox" slot="1"/>
        </check>
        <true/>
        <check card="1" diag="3|0|XTTE0570|textbox">
         <first>
          <filter flags="">
           <axis name="following" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
           <vc op="eq" comp="CCC">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
            </data>
            <str val="text"/>
           </vc>
          </filter>
         </first>
        </check>
       </choose>
       <choose line="273">
        <fn name="exists">
         <varRef name="textbox" slot="2"/>
        </fn>
        <let line="276" var="selStart" as="item()*" slot="3" eval="3">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
          <varRef name="textbox" slot="2"/>
          <str val="selectionStart"/>
         </ifCall>
         <let line="278" var="text" as="xs:string" slot="4" eval="7">
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="0" eval="6">
           <varRef name="textbox" slot="2"/>
          </ufCall>
          <sequence line="280">
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-property" type="item()*">
            <str val="value"/>
            <fn line="279" name="concat">
             <fn name="concat">
              <fn name="substring">
               <varRef name="text" slot="4"/>
               <int val="1"/>
               <treat as="xs:numeric" jsTest="return SaxonJS.U.Atomic.numeric.matches(item);" diag="0|2||substring">
                <check card="1" diag="0|2||substring">
                 <cvUntyped to="xs:numeric">
                  <data>
                   <varRef name="selStart" slot="3"/>
                  </data>
                 </cvUntyped>
                </check>
               </treat>
              </fn>
              <varRef name="char" slot="0"/>
             </fn>
             <fn name="substring">
              <varRef name="text" slot="4"/>
              <check line="277" card="1" diag="0|1||substring">
               <arith op="+" calc="a+a">
                <cvUntyped to="xs:double">
                 <atomSing card="?" diag="1|0||+">
                  <ifCall name="ixsl:get" type="item()*">
                   <varRef name="textbox" slot="2"/>
                   <str val="selectionEnd"/>
                  </ifCall>
                 </atomSing>
                </cvUntyped>
                <int val="1"/>
               </arith>
              </check>
             </fn>
            </fn>
            <varRef name="textbox" slot="2"/>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="282" name="ixsl:set-property" type="item()*">
            <str val="selectionEnd"/>
            <check card="1" diag="0|1||ixsl:set-property">
             <arith line="281" op="+" calc="a+a">
              <cvUntyped to="xs:double">
               <atomSing card="?" diag="1|0||+">
                <varRef name="selStart" slot="3"/>
               </atomSing>
              </cvUntyped>
              <fn name="string-length">
               <varRef name="char" slot="0"/>
              </fn>
             </arith>
            </check>
            <varRef name="textbox" slot="2"/>
           </ifCall>
           <filter line="284" flags="ib">
            <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:call" type="item()*">
             <varRef name="textbox" slot="2"/>
             <str val="focus"/>
             <arrayBlock/>
            </ifCall>
            <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg674645313" bSlot="1"/>
           </filter>
          </sequence>
         </let>
        </let>
       </choose>
      </let>
     </let>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="12" rank="1" minImp="0" slots="0" flags="os" line="214" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="214" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="gtb-selecteer-woordsoortgroep"/>
      </fn>
     </fn>
    </p.withPredicate>
    <forEach role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="215">
     <docOrder intra="1">
      <filter flags="">
       <slash>
        <fn name="reverse">
         <filter flags="b">
          <slash simple="1">
           <dot type="element(Q{}a)"/>
           <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
          </slash>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}data-hoofdwoordsoort)" jsTest="return item.name=='data-hoofdwoordsoort'"/>
          </fn>
         </filter>
        </fn>
        <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
       </slash>
       <vc op="eq" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
        </data>
        <str val="checkbox"/>
       </vc>
      </filter>
     </docOrder>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="216" name="ivdnt:check" bSlot="2">
      <withParam name="checkbox" flags="c" as="item()">
       <dot type="element(Q{}input)"/>
      </withParam>
     </callT>
    </forEach>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="11" rank="1" minImp="0" slots="1" flags="os" line="207" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="207" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="list-group-item"/>
      </fn>
     </fn>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="208" var="me" as="element(Q{}a)" slot="0" eval="7">
     <dot type="element(Q{}a)"/>
     <forEach line="209">
      <slash>
       <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
       <axis name="child" nodeTest="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
      </slash>
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="210" name="ixsl:set-attribute" type="item()*">
       <str val="class"/>
       <choose>
        <is op="is">
         <dot type="element(Q{}a)"/>
         <varRef name="me" slot="0"/>
        </is>
        <cvUntyped to="xs:string">
         <data>
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" tailCall="false" bSlot="3" eval="8 0">
           <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           <str val="active"/>
          </ufCall>
         </data>
        </cvUntyped>
        <true/>
        <cvUntyped to="xs:string">
         <data>
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="4" eval="8 0">
           <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           <str val="active"/>
          </ufCall>
         </data>
        </cvUntyped>
       </choose>
      </ifCall>
     </forEach>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="4" rank="1" minImp="0" slots="0" flags="os" line="75" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
     <axis vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="75" name="attribute" nodeTest="attribute(Q{}data-startline)" jsTest="return item.name=='data-startline'"/>
    </p.withPredicate>
    <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="84" name="ivdnt:show-results" bSlot="5">
     <withParam name="url-for-content" flags="c" as="xs:string">
      <fn line="76" name="concat">
       <fn name="concat">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-url-for-content" tailCall="false" bSlot="6"/>
        <str val="&amp;start="/>
       </fn>
       <data line="80">
        <axis name="attribute" nodeTest="attribute(Q{}data-startline)" jsTest="return item.name=='data-startline'"/>
       </data>
      </fn>
     </withParam>
     <withParam name="tabdiv-id" flags="c" as="xs:string">
      <treat line="78" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|tabdiv-id">
       <check card="1" diag="3|0|XTTE0570|tabdiv-id">
        <cvUntyped to="xs:string">
         <data>
          <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
           <ifCall name="ixsl:page" type="document-node()?"/>
           <str val="result-tabdiv-id"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </withParam>
     <withParam name="startline" flags="c" as="xs:integer">
      <check line="87" card="1" diag="8|0|XTTE0590|startline">
       <cvUntyped to="xs:integer">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}data-startline)" jsTest="return item.name=='data-startline'"/>
        </data>
       </cvUntyped>
      </check>
     </withParam>
     <withParam name="originating-tabdiv" flags="c" as="element(Q{}div)">
      <ufCall line="82" name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" tailCall="false" bSlot="7" eval="7">
       <dot type="element(Q{}a)"/>
      </ufCall>
     </withParam>
     <withParam name="text-input-uri-params" flags="t" as="xs:string">
      <treat line="77" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|text-input-uri-params">
       <check card="1" diag="3|0|XTTE0570|text-input-uri-params">
        <cvUntyped to="xs:string">
         <data>
          <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
           <ifCall name="ixsl:page" type="document-node()?"/>
           <str val="text-input-uri-params"/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="15" rank="1" minImp="0" slots="2" flags="os" line="258" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="258" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="open-speciale-tekens"/>
     </vc>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="259" var="speciaaltekendiv" as="element(Q{}div)" slot="0" eval="7">
     <check card="1" diag="3|0|XTTE0570|speciaaltekendiv">
      <docOrder intra="1">
       <slash>
        <slash>
         <fn name="reverse">
          <filter flags="b">
           <slash simple="1">
            <dot type="element(Q{}button)"/>
            <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
           </slash>
           <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
            <fn name="index-of">
             <fn name="tokenize">
              <fn name="string">
               <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="259" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
              </fn>
              <str val="\s+"/>
              <str val=""/>
             </fn>
             <str val="zoek-formulier"/>
            </fn>
           </fn>
          </filter>
         </fn>
         <axis name="descendant-or-self" nodeTest="node()" jsTest="return true;"/>
        </slash>
        <first>
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
          <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
           <fn name="index-of">
            <fn name="tokenize">
             <fn name="string">
              <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="259" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
             </fn>
             <str val="\s+"/>
             <str val=""/>
            </fn>
            <str val="speciaalteken"/>
           </fn>
          </fn>
         </filter>
        </first>
       </slash>
      </docOrder>
     </check>
     <let line="260" var="special-chars-visible" as="xs:boolean" slot="1" eval="8">
      <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
       <fn name="index-of">
        <fn name="tokenize">
         <fn name="string">
          <slash baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="260" simple="1">
           <varRef name="speciaaltekendiv" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          </slash>
         </fn>
         <str val="\s+"/>
         <str val=""/>
        </fn>
        <str val="in"/>
       </fn>
      </fn>
      <forEach line="262">
       <varRef name="speciaaltekendiv" slot="0"/>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="264" name="ixsl:set-attribute" type="item()*">
        <str val="class"/>
        <choose>
         <varRef name="special-chars-visible" slot="1"/>
         <cvUntyped to="xs:string">
          <data>
           <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}replace-class-value" tailCall="false" bSlot="8" eval="8 0 0">
            <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            <str val="in"/>
            <str val="out"/>
           </ufCall>
          </data>
         </cvUntyped>
         <true/>
         <cvUntyped to="xs:string">
          <data>
           <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}replace-class-value" tailCall="false" bSlot="9" eval="8 0 0">
            <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            <str val="out"/>
            <str val="in"/>
           </ufCall>
          </data>
         </cvUntyped>
        </choose>
       </ifCall>
      </forEach>
     </let>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="14" rank="1" minImp="0" slots="0" flags="os" line="250" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="250" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="doe-afdrukken"/>
     </vc>
    </p.withPredicate>
    <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="253" name="ivdnt:print-result" bSlot="10">
     <withParam name="url-for-content" flags="c" as="xs:string">
      <fn line="251" name="concat">
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-url-for-content" tailCall="false" bSlot="11"/>
       <str val="&amp;uitvoer=printhtml"/>
      </fn>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="13" rank="1" minImp="0" slots="4" flags="os" line="220" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="220" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="doe-selecteervraag"/>
     </vc>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="226" var="active-a" as="element(Q{}a)" slot="0" eval="7">
     <check card="1" diag="3|0|XTTE0570|active-a">
      <docOrder intra="1">
       <slash>
        <docOrder intra="1">
         <filter flags="">
          <slash>
           <fn name="reverse">
            <filter flags="b">
             <slash simple="1">
              <dot type="element(Q{}button)"/>
              <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
             </slash>
             <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
              <fn name="index-of">
               <fn name="tokenize">
                <fn name="string">
                 <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="226" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
                </fn>
                <str val="\s+"/>
                <str val=""/>
               </fn>
               <str val="modal-body"/>
              </fn>
             </fn>
            </filter>
           </fn>
           <axis name="descendant" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
          </slash>
          <vc op="eq" comp="CCC">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}data-type)" jsTest="return item.name=='data-type'"/>
           </data>
           <str val="inputs-and-selects-list"/>
          </vc>
         </filter>
        </docOrder>
        <first>
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
          <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
           <fn name="index-of">
            <fn name="tokenize">
             <fn name="string">
              <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="226" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
             </fn>
             <str val="\s+"/>
             <str val=""/>
            </fn>
            <str val="active"/>
           </fn>
          </fn>
         </filter>
        </first>
       </slash>
      </docOrder>
     </check>
     <choose line="227">
      <fn name="exists">
       <varRef name="active-a" slot="0"/>
      </fn>
      <let line="228" var="num" as="xs:integer" slot="1" eval="7">
       <arith op="+" calc="i+i">
        <fn name="count">
         <slash>
          <varRef name="active-a" slot="0"/>
          <axis name="preceding-sibling" nodeTest="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
         </slash>
        </fn>
        <int val="1"/>
       </arith>
       <forEach line="230">
        <slash simple="1">
         <slash>
          <treat line="225" as="element(Q{}inputs-and-selects-list)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='inputs-and-selects-list';" diag="3|0|XTTE0570|inputs-and-selects-list">
           <check card="?" diag="3|0|XTTE0570|inputs-and-selects-list">
            <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
             <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" tailCall="false" bSlot="12" eval="7">
              <dot type="element(Q{}button)"/>
             </ufCall>
             <str val="formdiv-inputs-and-selects"/>
            </ifCall>
           </check>
          </treat>
          <subscript>
           <axis name="child" nodeTest="element(Q{}inputs-and-selects)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='inputs-and-selects';"/>
           <varRef name="num" slot="1"/>
          </subscript>
         </slash>
         <axis name="descendant" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
        </slash>
        <let line="231" var="id" as="xs:string" slot="2" eval="7">
         <check card="1" diag="3|0|XTTE0570|id">
          <cvUntyped to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}ref)" jsTest="return item.name=='ref'"/>
           </data>
          </cvUntyped>
         </check>
         <let line="232" var="input-or-select-element" as="element()?" slot="3" eval="7">
          <treat as="element()" jsTest="return item.nodeType==1;" diag="3|0|XTTE0570|input-or-select-element">
           <check card="?" diag="3|0|XTTE0570|input-or-select-element">
            <slash>
             <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
             <fn name="key">
              <str val="ids"/>
              <varRef name="id" slot="2"/>
             </fn>
            </slash>
           </check>
          </treat>
          <choose line="234">
           <gcEE op="=" card="N:1" comp="CCC">
            <literal count="2">
             <str val="radio"/>
             <str val="checkbox"/>
            </literal>
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
            </data>
           </gcEE>
           <choose line="237">
            <fn line="235" name="exists">
             <filter flags="">
              <dot type="element(Q{}input-or-select)"/>
              <vc op="eq" comp="CCC">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}checked)" jsTest="return item.name=='checked'"/>
               </data>
               <str val="checked"/>
              </vc>
             </filter>
            </fn>
            <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" name="ivdnt:check" bSlot="13">
             <withParam name="checkbox" flags="c" as="element()?">
              <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==''&amp;&amp;q.local=='input';" diag="8|0||checkbox">
               <check card="1" diag="8|0||checkbox">
                <varRef name="input-or-select-element" slot="3"/>
               </check>
              </treat>
             </withParam>
            </callT>
            <true/>
            <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="238" name="ivdnt:uncheck" bSlot="14">
             <withParam name="checkbox" flags="c" as="element()?">
              <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==''&amp;&amp;q.local=='input';" diag="8|0||checkbox">
               <check card="1" diag="8|0||checkbox">
                <varRef name="input-or-select-element" slot="3"/>
               </check>
              </treat>
             </withParam>
            </callT>
           </choose>
           <true/>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="243" name="ixsl:set-property" type="item()*">
            <str val="value"/>
            <check line="242" card="1" diag="3|0|XTTE0570|val">
             <cvUntyped to="xs:string">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
              </data>
             </cvUntyped>
            </check>
            <check card="1" diag="0|2||ixsl:set-property">
             <varRef name="input-or-select-element" slot="3"/>
            </check>
           </ifCall>
          </choose>
         </let>
        </let>
       </forEach>
      </let>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="10" rank="1" minImp="0" slots="2" flags="os" line="194" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="194" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="geschiedenis"/>
     </vc>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="195" var="current-tab" as="element(Q{}div)" slot="0" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" tailCall="false" bSlot="15" eval="7">
      <dot type="element(Q{}button)"/>
     </ufCall>
     <let line="196" var="popupdiv" as="element(Q{}div)" slot="1" eval="7">
      <treat as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==''&amp;&amp;q.local=='div';" diag="3|0|XTTE0570|popupdiv">
       <check card="1" diag="3|0|XTTE0570|popupdiv">
        <fn name="id">
         <cvUntyped baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="54" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="substring-after">
            <check baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="196" card="1" diag="0|0||ivdnt:strip-hash-from-id">
             <cvUntyped to="xs:string">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}data-target)" jsTest="return item.name=='data-target'"/>
              </data>
             </cvUntyped>
            </check>
            <str val="#"/>
           </fn>
          </cast>
         </cvUntyped>
        </fn>
       </check>
      </treat>
      <forEach line="199">
       <check line="197" card="1" diag="3|0|XTTE0570|list-div">
        <filter flags="b">
         <slash simple="1">
          <varRef name="popupdiv" slot="1"/>
          <axis name="descendant" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
         </slash>
         <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
          <fn name="index-of">
           <fn name="tokenize">
            <fn name="string">
             <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="197" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            </fn>
            <str val="\s+"/>
            <str val=""/>
           </fn>
           <str val="gtb-zoekvragen-geschiedenis"/>
          </fn>
         </fn>
        </filter>
       </check>
       <resultDoc line="201" global="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
        <str role="href" val="?."/>
        <applyT role="content" line="202" mode="Q{}geschiedenis-lijst" bSlot="16">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" role="select" name="ixsl:get" type="item()*">
          <varRef name="current-tab" slot="0"/>
          <str val="formdiv-inputs-and-selects"/>
         </ifCall>
        </applyT>
       </resultDoc>
      </forEach>
     </let>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="9" rank="1" minImp="0" slots="2" flags="os" line="172" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="172" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="doe-exporteren"/>
     </vc>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="174" var="value-of-format-input" as="xs:string" slot="0" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="17" eval="7">
      <check card="1" diag="0|0||ivdnt:get-input-value">
       <filter line="173" flags="b">
        <slash simple="1">
         <check card="1" diag="3|0|XTTE0570|topdiv">
          <first>
           <filter flags="">
            <slash simple="1">
             <dot type="element(Q{}button)"/>
             <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
            </slash>
            <vc op="eq" comp="CCC">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}data-modaltype)" jsTest="return item.name=='data-modaltype'"/>
             </data>
             <str val="exporteren"/>
            </vc>
           </filter>
          </first>
         </check>
         <axis line="174" name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
        </slash>
        <and line="174" op="and">
         <vc op="eq" onEmpty="0" comp="CCC">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
          </data>
          <str val="uitvoer"/>
         </vc>
         <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="18" eval="7">
          <dot type="element(Q{}input)"/>
         </ufCall>
        </and>
       </filter>
      </check>
     </ufCall>
     <let line="176" var="url-for-content" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <fn name="concat">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-url-for-content" tailCall="false" bSlot="19"/>
        <str val="&amp;uitvoer="/>
       </fn>
       <varRef name="value-of-format-input" slot="0"/>
      </fn>
      <choose line="179">
       <vc op="eq" onEmpty="0" comp="CCC">
        <varRef name="value-of-format-input" slot="0"/>
        <str val="html"/>
       </vc>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="180" name="ivdnt:print-result" bSlot="20">
        <withParam name="url-for-content" flags="c" as="xs:string">
         <varRef line="181" name="url-for-content" slot="1"/>
        </withParam>
       </callT>
       <true/>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="185" name="ivdnt:export-result" bSlot="21">
        <withParam name="url-for-content" flags="c" as="xs:string">
         <varRef line="186" name="url-for-content" slot="1"/>
        </withParam>
        <withParam name="client-filename" flags="c" as="xs:string">
         <fn line="187" name="concat">
          <str val="gtb-export."/>
          <varRef name="value-of-format-input" slot="0"/>
         </fn>
        </withParam>
        <withParam name="mimetype" flags="c" as="xs:string">
         <fn line="188" name="concat">
          <str val="text/"/>
          <varRef name="value-of-format-input" slot="0"/>
         </fn>
        </withParam>
       </callT>
      </choose>
     </let>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="8" rank="1" minImp="0" slots="4" flags="os" line="117" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="117" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="doe-sorteren"/>
     </vc>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="118" var="topdiv" as="element(Q{}div)" slot="0" eval="7">
     <check card="1" diag="3|0|XTTE0570|topdiv">
      <first>
       <filter flags="">
        <slash simple="1">
         <dot type="element(Q{}button)"/>
         <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
        </slash>
        <vc op="eq" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}data-modaltype)" jsTest="return item.name=='data-modaltype'"/>
         </data>
         <str val="sorteren"/>
        </vc>
       </filter>
      </first>
     </check>
     <let line="119" var="keys" as="xs:string*" slot="1" eval="3">
      <for var="select" as="element(Q{}select)" slot="2">
       <slash role="in" simple="1">
        <varRef name="topdiv" slot="0"/>
        <axis name="descendant" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
       </slash>
       <filter role="return" flags="b">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="22" eval="6">
         <varRef name="select" slot="2"/>
        </ufCall>
        <vc op="ne" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <dot type="xs:string"/>
         <str val=""/>
        </vc>
       </filter>
      </for>
      <sequence line="124">
       <choose>
        <fn name="exists">
         <varRef name="keys" slot="1"/>
        </fn>
        <sequence line="125">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-property" type="item()*">
          <str val="result-sortkeys"/>
          <fn name="string-join">
           <varRef name="keys" slot="1"/>
           <str val=","/>
          </fn>
          <check card="1" diag="0|2||ixsl:set-property">
           <ifCall name="ixsl:page" type="document-node()?"/>
          </check>
         </ifCall>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="126" name="ixsl:set-property" type="item()*">
          <str val="result-sortreverse"/>
          <choose line="120">
           <vc op="eq" onEmpty="0" comp="CCC">
            <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="23" eval="7">
             <check card="1" diag="0|0||ivdnt:get-input-value">
              <filter flags="b">
               <slash simple="1">
                <varRef name="topdiv" slot="0"/>
                <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
               </slash>
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                 </data>
                 <str val="sorteervolgorde"/>
                </vc>
                <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="24" eval="7">
                 <dot type="element(Q{}input)"/>
                </ufCall>
               </and>
              </filter>
             </check>
            </ufCall>
            <str val="aflopend"/>
           </vc>
           <str val="true"/>
           <true/>
           <str val="false"/>
          </choose>
          <check card="1" diag="0|2||ixsl:set-property">
           <ifCall name="ixsl:page" type="document-node()?"/>
          </check>
         </ifCall>
        </sequence>
       </choose>
       <let line="136" var="current-tab" as="element(Q{}div)" slot="3" eval="7">
        <check card="1" diag="3|0|XTTE0570|current-tab">
         <docOrder intra="1">
          <slash>
           <fn name="key">
            <str val="ids"/>
            <str val="resultaathouder"/>
           </fn>
           <axis name="parent" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
          </slash>
         </docOrder>
        </check>
        <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="139" name="ivdnt:show-results" bSlot="25">
         <withParam name="url-for-content" flags="c" as="xs:string">
          <ufCall line="130" name="Q{http://www.ivdnt.org/xslt/namespaces}get-url-for-content" tailCall="false" bSlot="26"/>
         </withParam>
         <withParam name="tabdiv-id" flags="c" as="xs:string">
          <check line="137" card="1" diag="3|0|XTTE0570|tabdiv-id">
           <cvUntyped to="xs:string">
            <data>
             <slash simple="1">
              <varRef name="current-tab" slot="3"/>
              <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
             </slash>
            </data>
           </cvUntyped>
          </check>
         </withParam>
         <withParam name="startline" flags="c" as="xs:integer">
          <int val="1"/>
         </withParam>
         <withParam name="originating-tabdiv" flags="c" as="element(Q{}div)">
          <varRef line="143" name="current-tab" slot="3"/>
         </withParam>
         <withParam name="text-input-uri-params" flags="t" as="xs:string">
          <treat line="131" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|text-input-uri-params">
           <check card="1" diag="3|0|XTTE0570|text-input-uri-params">
            <cvUntyped to="xs:string">
             <data>
              <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
               <ifCall name="ixsl:page" type="document-node()?"/>
               <str val="text-input-uri-params"/>
              </ifCall>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </withParam>
        </callT>
       </let>
      </sequence>
     </let>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="7" rank="1" minImp="0" slots="0" flags="os" line="110" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="110" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="wis-sorteren"/>
     </vc>
    </p.withPredicate>
    <forEach role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="112">
     <slash line="111" simple="1">
      <check card="1" diag="3|0|XTTE0570|topdiv">
       <first>
        <filter flags="">
         <slash simple="1">
          <dot type="element(Q{}button)"/>
          <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
         </slash>
         <vc op="eq" comp="CCC">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}data-modaltype)" jsTest="return item.name=='data-modaltype'"/>
          </data>
          <str val="sorteren"/>
         </vc>
        </filter>
       </first>
      </check>
      <axis line="112" name="descendant" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
     </slash>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="113" name="ixsl:set-property" type="item()*">
      <str val="value"/>
      <check card="1" diag="0|1||ixsl:set-property">
       <slash simple="1">
        <first>
         <axis name="child" nodeTest="element(Q{}option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='option';"/>
        </first>
        <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
       </slash>
      </check>
      <dot type="element(Q{}select)"/>
     </ifCall>
    </forEach>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="6" rank="1" minImp="0" slots="1" flags="os" line="100" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="100" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="wis-zoeken"/>
     </vc>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="101" var="formdiv" as="element(Q{}div)" slot="0" eval="7">
     <check card="1" diag="3|0|XTTE0570|formdiv">
      <first>
       <filter flags="b">
        <slash simple="1">
         <dot type="element(Q{}button)"/>
         <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
        </slash>
        <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
         <fn name="index-of">
          <fn name="tokenize">
           <fn name="string">
            <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="101" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           </fn>
           <str val="\s+"/>
           <str val=""/>
          </fn>
          <str val="zoek-formulier"/>
         </fn>
        </fn>
       </filter>
      </first>
     </check>
     <sequence line="102">
      <forEach>
       <filter flags="">
        <slash simple="1">
         <varRef name="formdiv" slot="0"/>
         <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
        </slash>
        <vc op="eq" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </data>
         <str val="text"/>
        </vc>
       </filter>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="103" name="ixsl:set-property" type="item()*">
        <str val="value"/>
        <str val=""/>
        <dot type="element(Q{}input)"/>
       </ifCall>
      </forEach>
      <forEach line="105">
       <slash simple="1">
        <varRef name="formdiv" slot="0"/>
        <axis name="descendant" nodeTest="element(Q{}select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='select';"/>
       </slash>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="106" name="ixsl:set-property" type="item()*">
        <str val="value"/>
        <str val=""/>
        <dot type="element(Q{}select)"/>
       </ifCall>
      </forEach>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="5" rank="1" minImp="0" slots="0" flags="os" line="93" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="93" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
      </data>
      <str val="start-zoeken"/>
     </vc>
    </p.withPredicate>
    <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="95" name="ivdnt:doe-zoeken" bSlot="27">
     <withParam name="formdiv" flags="c" as="element(Q{}div)">
      <check line="94" card="1" diag="3|0|XTTE0570|formdiv">
       <first>
        <filter flags="b">
         <slash simple="1">
          <dot type="element(Q{}button)"/>
          <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
         </slash>
         <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
          <fn name="index-of">
           <fn name="tokenize">
            <fn name="string">
             <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="94" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
            </fn>
            <str val="\s+"/>
            <str val=""/>
           </fn>
           <str val="zoek-formulier"/>
          </fn>
         </fn>
        </filter>
       </first>
      </check>
     </withParam>
    </callT>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="os" line="23" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="23" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="woordsoortassistentieknop"/>
      </fn>
     </fn>
    </p.withPredicate>
    <forEach role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="25">
     <filter line="24" flags="b">
      <slash simple="1">
       <treat as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="3|0|XTTE0570|topdiv">
        <check card="1" diag="3|0|XTTE0570|topdiv">
         <fn name="key">
          <str val="ids"/>
          <cvUntyped baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="54" to="xs:string">
           <cast as="xs:untypedAtomic" emptiable="0">
            <fn name="substring-after">
             <check baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="24" card="1" diag="0|0||ivdnt:strip-hash-from-id">
              <cvUntyped to="xs:string">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}data-target)" jsTest="return item.name=='data-target'"/>
               </data>
              </cvUntyped>
             </check>
             <str val="#"/>
            </fn>
           </cast>
          </cvUntyped>
         </fn>
        </check>
       </treat>
       <axis line="25" name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
      </slash>
      <and line="25" op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
        </data>
        <str val="checkbox"/>
       </vc>
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="28" eval="7">
        <dot type="element(Q{}input)"/>
       </ufCall>
      </and>
     </filter>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="26" name="ivdnt:uncheck" bSlot="29">
      <withParam name="checkbox" flags="c" as="item()">
       <dot type="element(Q{}input)"/>
      </withParam>
     </callT>
    </forEach>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="2" rank="1" minImp="0" slots="3" flags="os" line="11" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='button';"/>
     <and vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="11" op="and">
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}data-dismiss)" jsTest="return item.name=='data-dismiss'"/>
       </data>
       <str val="modal"/>
      </vc>
      <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="empty">
       <fn name="index-of">
        <fn name="tokenize">
         <fn name="string">
          <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="11" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         </fn>
         <str val="\s+"/>
         <str val=""/>
        </fn>
        <str val="close"/>
       </fn>
      </fn>
     </and>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="12" var="target-input-name" as="xs:string?" slot="0" eval="8">
     <cvUntyped to="xs:string">
      <data>
       <slash simple="1">
        <first>
         <filter flags="b">
          <slash simple="1">
           <dot type="element(Q{}button)"/>
           <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
          </slash>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}data-target-input)" jsTest="return item.name=='data-target-input'"/>
          </fn>
         </filter>
        </first>
        <axis name="attribute" nodeTest="attribute(Q{}data-target-input)" jsTest="return item.name=='data-target-input'"/>
       </slash>
      </data>
     </cvUntyped>
     <choose line="14">
      <varRef name="target-input-name" slot="0"/>
      <let line="15" var="target-input" as="element(Q{}input)" slot="1" eval="7">
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-target-input" tailCall="false" bSlot="30" eval="7">
        <check card="1" diag="0|0||ivdnt:get-target-input">
         <varRef name="target-input-name" slot="0"/>
        </check>
       </ufCall>
       <let line="16" var="target-input-value" as="xs:string" slot="2" eval="7">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="31" eval="6">
         <varRef name="target-input" slot="1"/>
        </ufCall>
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="19" name="ixsl:set-property" type="item()*">
         <str val="value"/>
         <fn name="concat">
          <choose line="17">
           <fn name="not">
            <varRef name="target-input-value" slot="2"/>
           </fn>
           <str val=""/>
           <true/>
           <fn name="concat">
            <varRef name="target-input-value" slot="2"/>
            <str val=" "/>
           </fn>
          </choose>
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}woordsoortvalue" tailCall="false" bSlot="32" eval="7">
           <dot type="element(Q{}button)"/>
          </ufCall>
         </fn>
         <varRef name="target-input" slot="1"/>
        </ifCall>
       </let>
      </let>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="18" rank="1" minImp="0" slots="0" flags="os" line="293" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="293" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="gtb-cell-large"/>
      </fn>
     </fn>
    </p.withPredicate>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="294">
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
      <str val="class"/>
      <cvUntyped to="xs:string">
       <data>
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}replace-class-value" tailCall="false" bSlot="33" eval="8 0 0">
         <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         <str val="gtb-cell-large"/>
         <str val="gtb-cell-small"/>
        </ufCall>
       </data>
      </cvUntyped>
     </ifCall>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="295" name="ixsl:set-attribute" type="item()*">
      <str val="title"/>
      <str val="Klik voor maximale hoogte"/>
     </ifCall>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="17" rank="1" minImp="0" slots="0" flags="os" line="288" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" module="file:/D:/code/GTB-html/source/xslt/events.xslt" line="288" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="gtb-cell-small"/>
      </fn>
     </fn>
    </p.withPredicate>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="289">
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
      <str val="class"/>
      <cvUntyped to="xs:string">
       <data>
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}replace-class-value" tailCall="false" bSlot="34" eval="8 0 0">
         <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
         <str val="gtb-cell-small"/>
         <str val="gtb-cell-large"/>
        </ufCall>
       </data>
      </cvUntyped>
     </ifCall>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="290" name="ixsl:set-attribute" type="item()*">
      <str val="title"/>
      <str val="Klik voor de normale hoogte"/>
     </ifCall>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="164" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='body';"/>
     <ufCall vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="164" name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-is-ul-active" tailCall="false" bSlot="35"/>
    </p.withPredicate>
    <forEach role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="165">
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
      <dot type="element(Q{}body)"/>
      <str val="typeahead-active-ul"/>
     </ifCall>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="166" name="ivdnt:typeahead-hide" bSlot="36">
      <withParam name="ul" flags="c" as="item()">
       <treat line="167" as="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';" diag="8|0||ul">
        <dot/>
       </treat>
      </withParam>
     </callT>
    </forEach>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="2" flags="os" line="136" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
     <p.genNode type="element(Q{}ul)">
      <filter vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="136" flags="p">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';"/>
       </slash>
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}class-contains" tailCall="false" bSlot="37">
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        <str val="typeahead"/>
       </ufCall>
      </filter>
     </p.genNode>
    </p.withUpper>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="138" var="current-li" as="element(Q{}li)" slot="0" eval="7">
     <dot type="element(Q{}li)"/>
     <let line="139" var="ul" as="element(Q{}ul)" slot="1" eval="7">
      <check card="1" diag="3|0|XTTE0570|ul">
       <slash simple="1">
        <varRef name="current-li" slot="0"/>
        <axis name="parent" nodeTest="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';"/>
       </slash>
      </check>
      <sequence line="141">
       <forEach>
        <slash simple="1">
         <varRef name="ul" slot="1"/>
         <axis name="child" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
        </slash>
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="142" name="ixsl:set-attribute" type="item()*">
         <str val="class"/>
         <choose>
          <is op="is">
           <dot type="element(Q{}li)"/>
           <varRef name="current-li" slot="0"/>
          </is>
          <str val="active"/>
          <true/>
          <str val=""/>
         </choose>
        </ifCall>
       </forEach>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="144" name="ivdnt:typeahead-select" bSlot="38">
        <withParam name="selected-listitem" flags="c" as="item()">
         <dot line="145" type="element(Q{}li)"/>
        </withParam>
       </callT>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="147" name="ivdnt:typeahead-hide" bSlot="39">
        <withParam name="ul" flags="c" as="element(Q{}ul)">
         <varRef line="148" name="ul" slot="1"/>
        </withParam>
       </callT>
       <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="150" name="ivdnt:typeahead-after-select" bSlot="40">
        <withParam name="textfield" flags="c" as="element(Q{}input)">
         <ufCall line="151" name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-textfield" tailCall="false" bSlot="41" eval="6">
          <varRef name="ul" slot="1"/>
         </ufCall>
        </withParam>
        <withParam name="for-click" flags="c" as="xs:boolean">
         <true/>
        </withParam>
       </callT>
      </sequence>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="69" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}contains-wildcard-character" line="334" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="str" as="xs:string"/>
   <or role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="336" op="or">
    <fn name="contains">
     <varRef name="str" slot="0"/>
     <str val="*"/>
    </fn>
    <fn name="contains">
     <varRef name="str" slot="0"/>
     <str val="?"/>
    </fn>
   </or>
  </function>
 </co>
 <co id="70" binds="18 14">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onkeyup" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="1" flags="os" line="102" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
     <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" line="102" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="typeahead"/>
      </fn>
     </fn>
    </p.withPredicate>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="105" var="whichKey" as="xs:integer" slot="0" eval="7">
     <check card="1" diag="3|0|XTTE0570|whichKey">
      <cast as="xs:integer" emptiable="1">
       <atomSing card="?" diag="2|0||cast as">
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
         <ifCall line="104" name="ixsl:event" type="item()?"/>
         <str val="which"/>
        </ifCall>
       </atomSing>
      </cast>
     </check>
     <choose line="108">
      <gcEE op="=" card="N:1" comp="CAVC">
       <literal count="4">
        <int val="13"/>
        <int val="27"/>
        <int val="38"/>
        <int val="40"/>
       </literal>
       <varRef name="whichKey" slot="0"/>
      </gcEE>
      <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="109" name="ivdnt:typeahead-special-key" bSlot="0">
       <withParam name="textfield" flags="c" as="item()">
        <dot line="110" type="element(Q{}input)"/>
       </withParam>
       <withParam name="whichKey" flags="c" as="xs:integer">
        <varRef line="111" name="whichKey" slot="0"/>
       </withParam>
      </callT>
      <true/>
      <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="115" name="ivdnt:typeahead-normal-key" bSlot="1">
       <withParam name="textfield" flags="c" as="item()">
        <dot line="116" type="element(Q{}input)"/>
       </withParam>
      </callT>
     </choose>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="71" binds="72">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}always-false" line="12" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="1" flags="pU" as="xs:boolean" slots="0">
   <gVarRef role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="-1" name="Q{http://saxon.sf.net/generated-variable}gg662581632" bSlot="0"/>
  </function>
 </co>
 <co id="33" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-sensitivity-for-url" line="312" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="formdiv-inputs-and-selects" as="element(Q{}inputs-and-selects)"/>
   <cvUntyped role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="316" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="concat">
      <str val="sensitive="/>
      <fn name="exists">
       <check line="315" card="?" diag="3|0|XTTE0570|sensitive">
        <filter flags="b">
         <slash simple="1">
          <varRef name="formdiv-inputs-and-selects" slot="0"/>
          <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
         </slash>
         <and op="and">
          <and op="and">
           <vc op="eq" onEmpty="0" comp="CCC">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
            </data>
            <str val="sensitive"/>
           </vc>
           <vc op="eq" onEmpty="0" comp="CCC">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
            </data>
            <str val="checkbox"/>
           </vc>
          </and>
          <vc op="eq" onEmpty="0" comp="CCC">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}checked)" jsTest="return item.name=='checked'"/>
           </data>
           <str val="checked"/>
          </vc>
         </and>
        </filter>
       </check>
      </fn>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="73" binds="74 75">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}calculate-dictionary-startline" line="143" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" eval="7" flags="pU" as="xs:integer" slots="2">
   <arg name="statistics" as="element(Q{}statistics)"/>
   <arg name="dictname" as="xs:string"/>
   <arith role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="147" op="+" calc="i+i">
    <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-preceding-dict-linecount" tailCall="false" bSlot="0" eval="6 4 6">
     <varRef name="statistics" slot="0"/>
     <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg438509736" bSlot="1"/>
     <varRef name="dictname" slot="1"/>
    </ufCall>
    <int val="1"/>
   </arith>
  </function>
 </co>
 <co id="76" binds="">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onfocusin" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="298" module="file:/D:/code/GTB-html/source/xslt/events.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
     <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="298" op="eq" comp="CCC">
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
      </data>
      <str val="text"/>
     </vc>
    </p.withPredicate>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="300" name="ixsl:set-property" type="item()*">
     <str val="focussed_textbox-id"/>
     <dot type="element(Q{}input)"/>
     <check card="1" diag="0|2||ixsl:set-property">
      <ifCall name="ixsl:page" type="document-node()?"/>
     </check>
    </ifCall>
   </templateRule>
  </mode>
 </co>
 <co id="77" binds="28">
  <mode name="Q{}render-typeahead-results" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="53" module="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
    <applyT role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="54" flags="t" bSlot="0">
     <axis role="select" name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="78" binds="35">
  <mode name="Q{}render-conc-attributes" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="204" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}na)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='na'"/>
    <callT role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="205" name="parse-result-attributes" bSlot="0"/>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="204" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}zoekwoord)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='zoekwoord'"/>
    <callT role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="205" name="parse-result-attributes" bSlot="0"/>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="204" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}voor)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='voor'"/>
    <callT role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="205" name="parse-result-attributes" bSlot="0"/>
   </templateRule>
  </mode>
 </co>
 <co id="55" vis="PUBLIC" binds="">
  <globalParam name="Q{}showLinkToSearchResultXml" type="xs:boolean" line="0" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalParam>
 </co>
 <co id="15" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-ul" line="70" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" eval="7" flags="pU" as="element(Q{}ul)" slots="1">
   <arg name="input" as="element(Q{}input)"/>
   <check role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="72" card="1" diag="5|0|XTTE0780|ivdnt:get-my-typeahead-ul">
    <slash>
     <varRef name="input" slot="0"/>
     <first>
      <filter flags="b">
       <axis name="following-sibling" nodeTest="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';"/>
       <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
        <fn name="index-of">
         <fn name="tokenize">
          <fn name="string">
           <axis baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" line="72" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          </fn>
          <str val="\s+"/>
          <str val=""/>
         </fn>
         <str val="typeahead"/>
        </fn>
       </fn>
      </filter>
     </first>
    </slash>
   </check>
  </function>
 </co>
 <co id="79" binds="57">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}range-title" line="79" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" eval="8" flags="pU" as="xs:string" slots="2">
   <arg name="firstOfRange" as="xs:integer"/>
   <arg name="maxLineNumber" as="xs:integer"/>
   <cvUntyped role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="84" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="concat">
      <fn name="concat">
       <fn name="concat">
        <str val="Toon regel "/>
        <varRef name="firstOfRange" slot="0"/>
       </fn>
       <str val=" - "/>
      </fn>
      <treat line="83" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="3|0|XTTE0570|lastOfRange">
       <cvUntyped to="xs:integer">
        <fn name="min">
         <sequence>
          <arith op="-" calc="i-i">
           <arith op="+" calc="i+i">
            <varRef name="firstOfRange" slot="0"/>
            <gVarRef name="Q{}maxLinesInResultPage" bSlot="0"/>
           </arith>
           <int val="1"/>
          </arith>
          <varRef name="maxLineNumber" slot="1"/>
         </sequence>
        </fn>
       </cvUntyped>
      </treat>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="80" binds="">
  <globalVariable name="Q{}ZOEK_FORMULIER_CLASS" type="xs:string" line="44" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="zoek-formulier"/>
  </globalVariable>
 </co>
 <co id="81" binds="">
  <globalVariable name="Q{}URL_FOR_CONTENT_PROPERTY" type="xs:string" line="36" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="url-for-content"/>
  </globalVariable>
 </co>
 <co id="62" binds="59 54">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}show-results" flags="os" line="161" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="5">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="162">
    <param name="url-for-content" slot="0" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|url-for-content">
      <check card="1" diag="8|0|XTTE0590|url-for-content">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="163" name="tabdiv-id" slot="1" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|tabdiv-id">
      <check card="1" diag="8|0|XTTE0590|tabdiv-id">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="164" name="startline" slot="2" flags="r" as="xs:integer">
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|startline">
      <check card="1" diag="8|0|XTTE0590|startline">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="165" name="originating-tabdiv" slot="3" flags="r" as="element(Q{}div)">
     <treat role="conversion" as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="8|0|XTTE0590|originating-tabdiv">
      <check card="1" diag="8|0|XTTE0590|originating-tabdiv">
       <supplied slot="3"/>
      </check>
     </treat>
    </param>
    <param line="166" name="text-input-uri-params" slot="4" flags="ti" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|text-input-uri-params">
      <check card="1" diag="8|0|XTTE0590|text-input-uri-params">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="4"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="169" name="ivdnt:deactivate-tab" bSlot="0">
     <withParam name="tabdiv" flags="c" as="element(Q{}div)">
      <varRef name="originating-tabdiv" slot="3"/>
     </withParam>
    </callT>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="171" name="ixsl:schedule-action" type="item()*">
     <int val="0"/>
     <varRef name="url-for-content" slot="0"/>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="172" name="ivdnt:render-results" bSlot="1">
      <withParam name="url-for-content" flags="c" as="xs:string">
       <varRef line="173" name="url-for-content" slot="0"/>
      </withParam>
      <withParam name="tabdiv-id" flags="c" as="xs:string">
       <varRef line="174" name="tabdiv-id" slot="1"/>
      </withParam>
      <withParam name="startline" flags="c" as="xs:integer">
       <varRef line="175" name="startline" slot="2"/>
      </withParam>
      <withParam name="originating-tabdiv" flags="c" as="element(Q{}div)">
       <varRef line="176" name="originating-tabdiv" slot="3"/>
      </withParam>
      <withParam name="text-input-uri-params" flags="t" as="xs:string">
       <varRef line="177" name="text-input-uri-params" slot="4"/>
      </withParam>
     </callT>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="19" binds="17 68 43 68 29">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-select" flags="os" line="41" module="file:/D:/code/GTB-html/source/xslt/events.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/events.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="42">
    <param name="selected-listitem" slot="0" flags="r" as="element(Q{}li)">
     <treat role="conversion" as="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';" diag="8|0|XTTE0590|selected-listitem">
      <check card="1" diag="8|0|XTTE0590|selected-listitem">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <choose line="46">
     <let line="43" var="str" as="xs:string" slot="1" eval="7">
      <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="0" eval="7">
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-textfield" tailCall="false" bSlot="1" eval="7">
        <check card="1" diag="0|0||ivdnt:get-my-typeahead-textfield">
         <slash simple="1">
          <varRef name="selected-listitem" slot="0"/>
          <axis name="parent" nodeTest="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';"/>
         </slash>
        </check>
       </ufCall>
      </ufCall>
      <or baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="336" op="or">
       <fn name="contains">
        <varRef name="str" slot="1"/>
        <str val="*"/>
       </fn>
       <fn name="contains">
        <varRef name="str" slot="1"/>
        <str val="?"/>
       </fn>
      </or>
     </let>
     <empty/>
     <true/>
     <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="52" name="ivdnt:typeahead-update-textbox" bSlot="2">
      <withParam name="textbox" flags="c" as="element(Q{}input)">
       <ufCall line="53" name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-textfield" tailCall="false" bSlot="3" eval="7">
        <check card="1" diag="0|0||ivdnt:get-my-typeahead-textfield">
         <slash simple="1">
          <varRef name="selected-listitem" slot="0"/>
          <axis name="parent" nodeTest="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';"/>
         </slash>
        </check>
       </ufCall>
      </withParam>
      <withParam name="value" flags="c" as="xs:string">
       <ufCall line="51" name="Q{http://www.ivdnt.org/xslt/namespaces}get-typeahead-value-from-listitem" tailCall="false" bSlot="4" eval="6">
        <varRef name="selected-listitem" slot="0"/>
       </ufCall>
      </withParam>
     </callT>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="82" binds="57 57 57 57 57 57 57 57 57 79 79 79 57 57 79 79">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}gen-pagination" flags="os" line="87" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" slots="8">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="88">
    <param name="statistics" slot="0" flags="r" as="element(Q{}statistics)">
     <treat role="conversion" as="element(Q{}statistics)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='statistics';" diag="8|0|XTTE0590|statistics">
      <check card="1" diag="8|0|XTTE0590|statistics">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <param line="89" name="currentStartLine" slot="1" flags="r" as="xs:integer">
     <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|currentStartLine">
      <check card="1" diag="8|0|XTTE0590|currentStartLine">
       <cvUntyped to="xs:integer">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="92" var="highestLineNumber" as="xs:integer" slot="2" eval="7">
     <check card="1" diag="3|0|XTTE0570|highestLineNumber">
      <cast as="xs:integer" emptiable="1">
       <data>
        <slash simple="1">
         <slash>
          <varRef name="statistics" slot="0"/>
          <first>
           <axis name="child" nodeTest="element(Q{}stat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='stat';"/>
          </first>
         </slash>
         <axis name="attribute" nodeTest="attribute(Q{}count)" jsTest="return item.name=='count'"/>
        </slash>
       </data>
      </cast>
     </check>
     <let line="94" var="lastStartLine" as="xs:integer" slot="3" eval="7">
      <arith op="+" calc="i+i">
       <arith op="*" calc="i*i">
        <arith op="-" calc="i-i">
         <cast line="93" as="xs:integer" emptiable="0">
          <arith op="div" calc="i/i">
           <arith op="-" calc="i-i">
            <arith op="+" calc="i+i">
             <varRef name="highestLineNumber" slot="2"/>
             <gVarRef name="Q{}maxLinesInResultPage" bSlot="0"/>
            </arith>
            <int val="1"/>
           </arith>
           <gVarRef name="Q{}maxLinesInResultPage" bSlot="1"/>
          </arith>
         </cast>
         <int val="1"/>
        </arith>
        <gVarRef name="Q{}maxLinesInResultPage" bSlot="2"/>
       </arith>
       <int val="1"/>
      </arith>
      <let line="95" var="nextStartLine" as="xs:integer" slot="4" eval="7">
       <choose>
        <vc op="gt" onEmpty="0" comp="CAVC">
         <arith op="+" calc="i+i">
          <varRef name="currentStartLine" slot="1"/>
          <gVarRef name="Q{}maxLinesInResultPage" bSlot="3"/>
         </arith>
         <varRef name="highestLineNumber" slot="2"/>
        </vc>
        <int val="0"/>
        <true/>
        <arith op="+" calc="i+i">
         <varRef name="currentStartLine" slot="1"/>
         <gVarRef name="Q{}maxLinesInResultPage" bSlot="4"/>
        </arith>
       </choose>
       <let line="97" var="prevStartLine" as="xs:integer" slot="5" eval="7">
        <choose>
         <vc op="lt" onEmpty="0" comp="CAVC">
          <varRef name="currentStartLine" slot="1"/>
          <gVarRef name="Q{}maxLinesInResultPage" bSlot="5"/>
         </vc>
         <int val="0"/>
         <true/>
         <arith op="-" calc="i-i">
          <varRef name="currentStartLine" slot="1"/>
          <gVarRef name="Q{}maxLinesInResultPage" bSlot="6"/>
         </arith>
        </choose>
        <let line="99" var="surroundingStartlines" as="xs:integer+" slot="6" eval="11">
         <sequence>
          <varRef name="prevStartLine" slot="5"/>
          <varRef name="currentStartLine" slot="1"/>
          <varRef name="nextStartLine" slot="4"/>
          <choose line="96">
           <compareToInt op="eq" val="0">
            <varRef name="nextStartLine" slot="4"/>
           </compareToInt>
           <int val="0"/>
           <vc op="gt" onEmpty="0" comp="CAVC">
            <arith op="+" calc="i+i">
             <varRef name="nextStartLine" slot="4"/>
             <gVarRef name="Q{}maxLinesInResultPage" bSlot="7"/>
            </arith>
            <varRef name="highestLineNumber" slot="2"/>
           </vc>
           <int val="0"/>
           <true/>
           <arith op="+" calc="i+i">
            <varRef name="nextStartLine" slot="4"/>
            <gVarRef name="Q{}maxLinesInResultPage" bSlot="8"/>
           </arith>
          </choose>
         </sequence>
         <sequence line="101">
          <elem name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
           <sequence>
            <att name="class" flags="l">
             <str val="gtb-paginate_button "/>
            </att>
            <elem name="a" flags="l">
             <sequence>
              <att name="href" flags="l">
               <str val="#"/>
              </att>
              <att name="data-startline" flags="l">
               <str val="1"/>
              </att>
              <att name="title" flags="l">
               <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}range-title" tailCall="false" bSlot="9" eval="0 6">
                <int val="1"/>
                <varRef name="highestLineNumber" slot="2"/>
               </ufCall>
              </att>
              <valueOf flags="Sel">
               <str val="Eerste"/>
              </valueOf>
             </sequence>
            </elem>
           </sequence>
          </elem>
          <elem line="102" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
           <sequence>
            <att name="class" flags="l">
             <fn name="concat">
              <str val="gtb-paginate_button previous "/>
              <choose>
               <compareToInt op="eq" val="0">
                <varRef name="prevStartLine" slot="5"/>
               </compareToInt>
               <str val="disabled"/>
               <true/>
               <str val=""/>
              </choose>
             </fn>
            </att>
            <att name="id" flags="l">
             <str val="gtb-result-table_previous"/>
            </att>
            <let line="103" var="line" as="xs:integer" slot="7" eval="7">
             <treat as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="3|0|XTTE0570|line">
              <cvUntyped to="xs:integer">
               <fn name="max">
                <sequence>
                 <varRef name="prevStartLine" slot="5"/>
                 <int val="1"/>
                </sequence>
               </fn>
              </cvUntyped>
             </treat>
             <elem line="104" name="a" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
              <sequence>
               <att name="href" flags="l">
                <str val="#"/>
               </att>
               <att name="data-startline" flags="l">
                <convert from="xs:integer" to="xs:string">
                 <varRef name="line" slot="7"/>
                </convert>
               </att>
               <att name="title" flags="l">
                <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}range-title" tailCall="false" bSlot="10" eval="6 6">
                 <varRef name="line" slot="7"/>
                 <varRef name="highestLineNumber" slot="2"/>
                </ufCall>
               </att>
               <valueOf flags="Sel">
                <str val="Vorige"/>
               </valueOf>
              </sequence>
             </elem>
            </let>
           </sequence>
          </elem>
          <choose line="106">
           <compareToInt op="ne" val="1">
            <first>
             <varRef name="surroundingStartlines" slot="6"/>
            </first>
           </compareToInt>
           <elem line="107" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
            <sequence>
             <att name="class" flags="l">
              <str val="gbt-paginate_button disabled"/>
             </att>
             <elem name="a" flags="l">
              <sequence>
               <att name="href" flags="l">
                <str val="#"/>
               </att>
               <valueOf flags="el">
                <str val="…"/>
               </valueOf>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </choose>
          <forEach line="109">
           <filter flags="b">
            <varRef name="surroundingStartlines" slot="6"/>
            <compareToInt op="ne" val="0">
             <dot type="xs:integer"/>
            </compareToInt>
           </filter>
           <elem line="110" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
            <sequence>
             <att name="class" flags="l">
              <fn name="concat">
               <str val="gtb-paginate_button "/>
               <choose>
                <vc op="eq" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                 <dot type="xs:integer"/>
                 <varRef name="currentStartLine" slot="1"/>
                </vc>
                <str val="active"/>
                <true/>
                <str val=""/>
               </choose>
              </fn>
             </att>
             <elem name="a" flags="l">
              <sequence>
               <att name="title" flags="l">
                <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}range-title" tailCall="false" bSlot="11" eval="7 6">
                 <dot type="xs:integer"/>
                 <varRef name="highestLineNumber" slot="2"/>
                </ufCall>
               </att>
               <att name="href" flags="l">
                <str val="#"/>
               </att>
               <att name="data-startline" flags="l">
                <convert from="xs:integer" to="xs:string">
                 <dot type="xs:integer"/>
                </convert>
               </att>
               <valueOf flags="el">
                <convert from="xs:integer" to="xs:string">
                 <cast line="123" as="xs:integer" emptiable="0">
                  <arith op="div" calc="i/i">
                   <arith op="-" calc="i-i">
                    <arith op="+" calc="i+i">
                     <dot line="110" type="xs:integer"/>
                     <gVarRef name="Q{}maxLinesInResultPage" bSlot="12"/>
                    </arith>
                    <int val="1"/>
                   </arith>
                   <gVarRef name="Q{}maxLinesInResultPage" bSlot="13"/>
                  </arith>
                 </cast>
                </convert>
               </valueOf>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </forEach>
          <choose line="112">
           <vc op="ne" onEmpty="0" comp="CAVC">
            <subscript>
             <varRef name="surroundingStartlines" slot="6"/>
             <int val="3"/>
            </subscript>
            <varRef name="lastStartLine" slot="3"/>
           </vc>
           <elem line="113" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
            <sequence>
             <att name="class" flags="l">
              <str val="gbt-paginate_button disabled"/>
             </att>
             <elem name="a" flags="l">
              <sequence>
               <att name="href" flags="l">
                <str val="#"/>
               </att>
               <valueOf flags="el">
                <str val="…"/>
               </valueOf>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </choose>
          <elem line="115" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
           <sequence>
            <att name="class" flags="l">
             <fn name="concat">
              <str val="gtb-paginate_button next "/>
              <choose>
               <compareToInt op="eq" val="0">
                <varRef name="nextStartLine" slot="4"/>
               </compareToInt>
               <str val="disabled"/>
               <true/>
               <str val=""/>
              </choose>
             </fn>
            </att>
            <att name="id" flags="l">
             <str val="gtb-result-table_next"/>
            </att>
            <elem line="116" name="a" flags="l">
             <sequence>
              <att name="href" flags="l">
               <str val="#"/>
              </att>
              <att name="data-startline" flags="l">
               <convert from="xs:integer" to="xs:string">
                <varRef name="nextStartLine" slot="4"/>
               </convert>
              </att>
              <att name="title" flags="l">
               <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}range-title" tailCall="false" bSlot="14" eval="6 6">
                <varRef name="nextStartLine" slot="4"/>
                <varRef name="highestLineNumber" slot="2"/>
               </ufCall>
              </att>
              <valueOf flags="Sel">
               <str val="Volgende"/>
              </valueOf>
             </sequence>
            </elem>
           </sequence>
          </elem>
          <elem line="118" name="li" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
           <sequence>
            <att name="class" flags="l">
             <str val="gtb-paginate_button "/>
            </att>
            <elem name="a" flags="l">
             <sequence>
              <att name="href" flags="l">
               <str val="#"/>
              </att>
              <att name="data-startline" flags="l">
               <convert from="xs:integer" to="xs:string">
                <varRef name="lastStartLine" slot="3"/>
               </convert>
              </att>
              <att name="title" flags="l">
               <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}range-title" tailCall="false" bSlot="15" eval="6 6">
                <varRef name="lastStartLine" slot="3"/>
                <varRef name="highestLineNumber" slot="2"/>
               </ufCall>
              </att>
              <valueOf flags="Sel">
               <str val="Laatste"/>
              </valueOf>
             </sequence>
            </elem>
           </sequence>
          </elem>
         </sequence>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="12" binds="12 11">
  <mode name="Q{}geschiedenis-lijst" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="148" module="file:/D:/code/GTB-html/source/xslt/history.xslt">
    <p.nodeTest role="match" test="element(Q{}inputs-and-selects-list)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='inputs-and-selects-list';"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="149" name="div" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="class" flags="l">
       <str val="list-group"/>
      </att>
      <att name="data-type" flags="l">
       <str val="inputs-and-selects-list"/>
      </att>
      <applyT mode="Q{}geschiedenis-lijst" flags="i" bSlot="0">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="152" module="file:/D:/code/GTB-html/source/xslt/history.xslt">
    <p.nodeTest role="match" test="element(Q{}inputs-and-selects)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='inputs-and-selects';"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="155" name="a" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="href" flags="l">
       <str val="#"/>
      </att>
      <att name="class" flags="l">
       <str val="list-group-item list-group-item-action"/>
      </att>
      <copyOf line="156" flags="vsc">
       <ufCall line="153" name="Q{http://www.ivdnt.org/xslt/namespaces}get-question-description" tailCall="false" bSlot="1" eval="7">
        <dot type="element(Q{}inputs-and-selects)"/>
       </ufCall>
      </copyOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="os" line="168" module="file:/D:/code/GTB-html/source/xslt/history.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
     <and vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="168" op="and">
      <or op="or">
       <vc op="eq" onEmpty="0" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
        </data>
        <str val="text"/>
       </vc>
       <vc op="eq" onEmpty="0" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}element)" jsTest="return item.name=='element'"/>
        </data>
        <str val="select"/>
       </vc>
      </or>
      <data>
       <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
      </data>
     </and>
    </p.withPredicate>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="169" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <valueOf flags="el">
       <fn name="concat">
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
          </data>
         </convert>
        </fn>
        <str val=" ("/>
       </fn>
      </valueOf>
      <elem name="span" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-input-value"/>
        </att>
        <valueOf flags="el">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
          </data>
         </convert>
        </valueOf>
       </sequence>
      </elem>
      <valueOf flags="Sel">
       <str val=")"/>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="2" rank="1" minImp="0" slots="0" flags="os" line="160" module="file:/D:/code/GTB-html/source/xslt/history.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
     <and vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="160" op="and">
      <gcEE op="=" card="N:1" comp="CCC">
       <literal count="2">
        <str val="checkbox"/>
        <str val="radio"/>
       </literal>
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
       </data>
      </gcEE>
      <gc op="=" card="1:1" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}checked)" jsTest="return item.name=='checked'"/>
       </data>
       <str val="checked"/>
      </gc>
     </and>
    </p.withPredicate>
    <choose role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="162">
     <fn line="92" name="exists">
      <filter flags="b">
       <dot line="162" type="element(Q{}input-or-select)"/>
       <and op="and">
        <vc op="eq" onEmpty="0" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </data>
         <str val="checkbox"/>
        </vc>
        <vc op="eq" onEmpty="0" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
         </data>
         <str val="wdb"/>
        </vc>
       </and>
      </filter>
     </fn>
     <elem name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <valueOf flags="el">
       <fn name="upper-case">
        <cvUntyped to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
         </data>
        </cvUntyped>
       </fn>
      </valueOf>
     </elem>
     <fn line="97" name="exists">
      <filter flags="b">
       <dot line="163" type="element(Q{}input-or-select)"/>
       <and op="and">
        <vc op="eq" onEmpty="0" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </data>
         <str val="radio"/>
        </vc>
        <vc op="eq" onEmpty="0" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
         </data>
         <str val="domein"/>
        </vc>
       </and>
      </filter>
     </fn>
     <elem line="163" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <valueOf flags="el">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
        </data>
       </convert>
      </valueOf>
     </elem>
     <true/>
     <elem line="164" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <sequence>
       <valueOf flags="el">
        <fn name="concat">
         <fn name="string">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}data-humanname)" jsTest="return item.name=='data-humanname'"/>
           </data>
          </convert>
         </fn>
         <str val=": "/>
        </fn>
       </valueOf>
       <elem name="span" flags="l">
        <sequence>
         <att name="class" flags="l">
          <str val="gtb-input-value"/>
         </att>
         <valueOf flags="el">
          <fn name="concat">
           <str val="ja t="/>
           <fn name="string">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
             </data>
            </convert>
           </fn>
           <str val=" n="/>
           <fn name="string">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
             </data>
            </convert>
           </fn>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </sequence>
     </elem>
    </choose>
   </templateRule>
  </mode>
 </co>
 <co id="83" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}is-wdb-field" line="90" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="8" flags="pU" as="xs:boolean" slots="1">
   <arg name="input" as="element(Q{}input-or-select)"/>
   <fn role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="92" name="exists">
    <filter flags="b">
     <varRef name="input" slot="0"/>
     <and op="and">
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
       </data>
       <str val="checkbox"/>
      </vc>
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
       </data>
       <str val="wdb"/>
      </vc>
     </and>
    </filter>
   </fn>
  </function>
 </co>
 <co id="32" binds="84">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-wdb-inputs-for-url" line="297" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="7" flags="pU" as="xs:string" slots="2">
   <arg name="formdiv-inputs-and-selects" as="element(Q{}inputs-and-selects)"/>
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="300" var="names" as="xs:string*" slot="1" eval="3">
    <cvUntyped line="301" to="xs:string">
     <data>
      <forEach>
       <filter flags="b">
        <slash simple="1">
         <varRef name="formdiv-inputs-and-selects" slot="0"/>
         <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
        </slash>
        <and op="and">
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
           </data>
           <str val="checkbox"/>
          </vc>
          <vc op="eq" onEmpty="0" comp="CCC">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}data-inputname)" jsTest="return item.name=='data-inputname'"/>
           </data>
           <str val="wdb"/>
          </vc>
         </and>
         <vc op="eq" onEmpty="0" comp="CCC">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}checked)" jsTest="return item.name=='checked'"/>
          </data>
          <str val="checked"/>
         </vc>
        </and>
       </filter>
       <valueOf line="302">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
         </data>
        </convert>
       </valueOf>
      </forEach>
     </data>
    </cvUntyped>
    <treat line="305" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|ivdnt:get-wdb-inputs-for-url">
     <check card="1" diag="5|0|XTTE0780|ivdnt:get-wdb-inputs-for-url">
      <cvUntyped to="xs:string">
       <sequence>
        <choose>
         <fn name="empty">
          <varRef name="names" slot="1"/>
         </fn>
         <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1369765450" bSlot="0"/>
        </choose>
        <cast line="308" as="xs:untypedAtomic" emptiable="0">
         <fn name="encode-for-uri">
          <fn name="string-join">
           <varRef name="names" slot="1"/>
           <str val=","/>
          </fn>
         </fn>
        </cast>
       </sequence>
      </cvUntyped>
     </check>
    </treat>
   </let>
  </function>
 </co>
 <co id="74" binds="74">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-preceding-dict-linecount" line="126" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" eval="7" flags="pU" as="xs:integer" slots="5">
   <arg name="statistics" as="element(Q{}statistics)"/>
   <arg name="dictnames" as="xs:string*"/>
   <arg name="dictname" as="xs:string"/>
   <choose role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="132">
    <or op="or">
     <fn name="empty">
      <varRef name="dictnames" slot="1"/>
     </fn>
     <vc op="eq" onEmpty="0" comp="CCC">
      <first>
       <varRef name="dictnames" slot="1"/>
      </first>
      <varRef name="dictname" slot="2"/>
     </vc>
    </or>
    <int val="0"/>
    <true/>
    <let line="136" var="stat" as="element(Q{}stat)?" slot="3" eval="7">
     <check card="?" diag="3|0|XTTE0570|stat">
      <let var="vv:loc1369348959" as="xs:string?" slot="4" eval="7">
       <first>
        <varRef name="dictnames" slot="1"/>
       </first>
       <filter flags="">
        <slash simple="1">
         <varRef name="statistics" slot="0"/>
         <axis name="child" nodeTest="element(Q{}stat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='stat';"/>
        </slash>
        <vc op="eq" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}item)" jsTest="return item.name=='item'"/>
         </data>
         <varRef name="vv:loc1369348959" slot="4"/>
        </vc>
       </filter>
      </let>
     </check>
     <arith line="138" op="+" calc="i+i">
      <choose line="137">
       <fn name="exists">
        <varRef name="stat" slot="3"/>
       </fn>
       <check card="1" diag="3|0|XTTE0570|statcount">
        <cast as="xs:integer" emptiable="1">
         <data>
          <slash simple="1">
           <varRef name="stat" slot="3"/>
           <axis name="attribute" nodeTest="attribute(Q{}count)" jsTest="return item.name=='count'"/>
          </slash>
         </data>
        </cast>
       </check>
       <true/>
       <int val="0"/>
      </choose>
      <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-preceding-dict-linecount" tailCall="false" bSlot="0" eval="6 4 6">
       <varRef name="statistics" slot="0"/>
       <tail start="2">
        <varRef name="dictnames" slot="1"/>
       </tail>
       <varRef name="dictname" slot="2"/>
      </ufCall>
     </arith>
    </let>
   </choose>
  </function>
 </co>
 <co id="66" binds="">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}uncheck" flags="os" line="62" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="63">
    <param name="checkbox" slot="0" flags="r" as="element(Q{}input)">
     <treat role="conversion" as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';" diag="8|0|XTTE0590|checkbox">
      <check card="1" diag="8|0|XTTE0590|checkbox">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="64" name="ixsl:set-property" type="item()*">
     <str val="checked"/>
     <false/>
     <varRef name="checkbox" slot="0"/>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id="85" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}is-active-li" line="81" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="li" as="element(Q{}li)?"/>
   <and role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="83" op="and">
    <fn name="exists">
     <varRef name="li" slot="0"/>
    </fn>
    <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
     <fn name="index-of">
      <fn name="tokenize">
       <fn name="string">
        <slash baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" line="83" simple="1">
         <varRef name="li" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </slash>
       </fn>
       <str val="\s+"/>
       <str val=""/>
      </fn>
      <str val="active"/>
     </fn>
    </fn>
   </and>
  </function>
 </co>
 <co id="40" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" line="47" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="input" as="element(Q{}input)"/>
   <treat role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="49" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="5|0|XTTE0780|ivdnt:is-checked">
    <check card="1" diag="5|0|XTTE0780|ivdnt:is-checked">
     <cvUntyped to="xs:boolean">
      <data>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
        <varRef name="input" slot="0"/>
        <str val="checked"/>
       </ifCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id="49" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-is-ul-active" line="156" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" eval="8" flags="pU" as="xs:boolean" slots="0">
   <fn role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="157" name="exists">
    <filter flags="b">
     <slash>
      <slash simple="1">
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
       <axis name="child" nodeTest="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='html';"/>
      </slash>
      <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='body';"/>
     </slash>
     <fn name="exists">
      <filter flags="b">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <vc op="eq" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="typeahead-active-ul"/>
       </vc>
      </filter>
     </fn>
    </filter>
   </fn>
  </function>
 </co>
 <co id="7" binds="86 1">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}doe-zoeken" flags="os" line="339" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="340">
    <param name="formdiv" slot="0" flags="r" as="element(Q{}div)">
     <treat role="conversion" as="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';" diag="8|0|XTTE0590|formdiv">
      <check card="1" diag="8|0|XTTE0590|formdiv">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="344" name="ivdnt:select-tab" bSlot="0">
     <withParam name="tabid" flags="c" as="xs:string">
      <str val="resultaat"/>
     </withParam>
     <withParam name="formdiv-inputs-and-selects" flags="c" as="element(Q{}inputs-and-selects)">
      <ufCall line="341" name="Q{http://www.ivdnt.org/xslt/namespaces}get-formdiv-inputs-and-selects" tailCall="false" bSlot="1" eval="6">
       <varRef name="formdiv" slot="0"/>
      </ufCall>
     </withParam>
    </callT>
   </sequence>
  </template>
 </co>
 <co id="53" binds="17 40">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}create-input-or-select-element" line="41" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="7" flags="pU" as="element(Q{}input-or-select)" slots="3">
   <arg name="input-or-select-element" as="element()"/>
   <arg name="formdiv" as="element(Q{}div)"/>
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="46" var="type" as="xs:string" slot="2" eval="7">
    <choose>
     <fn name="exists">
      <slash simple="1">
       <varRef name="input-or-select-element" slot="0"/>
       <axis name="self" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
      </slash>
     </fn>
     <check card="1" diag="3|0|XTTE0570|type">
      <cvUntyped to="xs:string">
       <data>
        <slash simple="1">
         <varRef name="input-or-select-element" slot="0"/>
         <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
        </slash>
       </data>
      </cvUntyped>
     </check>
     <true/>
     <str val=""/>
    </choose>
    <elem line="49" name="input-or-select" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="element" flags="l">
       <fn name="local-name">
        <varRef name="input-or-select-element" slot="0"/>
       </fn>
      </att>
      <att name="name" flags="l">
       <check line="45" card="1" diag="3|0|XTTE0570|name">
        <cvUntyped to="xs:string">
         <data>
          <slash simple="1">
           <varRef name="input-or-select-element" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
          </slash>
         </data>
        </cvUntyped>
       </check>
      </att>
      <att name="type" flags="l">
       <varRef name="type" slot="2"/>
      </att>
      <att name="value" flags="l">
       <fn line="47" name="normalize-space">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="0" eval="6">
         <varRef name="input-or-select-element" slot="0"/>
        </ufCall>
       </fn>
      </att>
      <att name="ref" flags="l">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <slash simple="1">
          <varRef name="input-or-select-element" slot="0"/>
          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
         </slash>
        </data>
       </convert>
      </att>
      <copyOf line="50" flags="vsc">
       <filter flags="b">
        <slash simple="1">
         <varRef name="input-or-select-element" slot="0"/>
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        </slash>
        <fn name="starts-with">
         <fn name="name">
          <dot type="attribute()"/>
         </fn>
         <str val="data-"/>
        </fn>
       </filter>
      </copyOf>
      <att line="51" name="form-div-id" flags="l">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <slash simple="1">
          <varRef name="formdiv" slot="1"/>
          <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
         </slash>
        </data>
       </convert>
      </att>
      <choose line="52">
       <choose line="48">
        <gcEE op="=" card="N:1" comp="CCC">
         <literal count="2">
          <str val="radio"/>
          <str val="checkbox"/>
         </literal>
         <slash>
          <varRef name="input-or-select-element" slot="0"/>
          <varRef name="type" slot="2"/>
         </slash>
        </gcEE>
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="1" eval="7">
         <treat as="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==''&amp;&amp;q.local=='input';" diag="0|0||ivdnt:is-checked">
          <varRef name="input-or-select-element" slot="0"/>
         </treat>
        </ufCall>
        <true/>
        <false/>
       </choose>
       <att name="checked" flags="l">
        <str val="checked"/>
       </att>
      </choose>
      <choose line="53">
       <varRef name="type" slot="2"/>
       <att name="type" flags="l">
        <varRef name="type" slot="2"/>
       </att>
      </choose>
      <choose line="54">
       <data>
        <slash simple="1">
         <varRef name="formdiv" slot="1"/>
         <axis name="attribute" nodeTest="attribute(Q{}data-label)" jsTest="return item.name=='data-label'"/>
        </slash>
       </data>
       <att name="form-label" flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <slash simple="1">
           <varRef name="formdiv" slot="1"/>
           <axis name="attribute" nodeTest="attribute(Q{}data-label)" jsTest="return item.name=='data-label'"/>
          </slash>
         </data>
        </convert>
       </att>
      </choose>
     </sequence>
    </elem>
   </let>
  </function>
 </co>
 <co id="87" vis="PUBLIC" binds="">
  <globalParam name="Q{}baseListURL" type="xs:string" line="0" visibility="PUBLIC" flags="r" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};"/>
 </co>
 <co id="21" binds="">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-hide" flags="os" line="173" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="174">
    <param name="ul" slot="0" flags="r" as="element(Q{}ul)">
     <treat role="conversion" as="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';" diag="8|0|XTTE0590|ul">
      <check card="1" diag="8|0|XTTE0590|ul">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <forEach line="176">
     <slash>
      <slash simple="1">
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
       <axis name="child" nodeTest="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='html';"/>
      </slash>
      <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='body';"/>
     </slash>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="177" name="ixsl:remove-attribute" type="item()*">
      <str val="typeahead-active-ul"/>
      <str val=""/>
     </ifCall>
    </forEach>
    <forEach line="179">
     <varRef name="ul" slot="0"/>
     <sequence line="181">
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-style" type="item()*">
       <str val="display"/>
       <str val="none"/>
       <dot type="element(Q{}ul)"/>
      </ifCall>
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="182" name="ixsl:set-property" type="item()*">
       <str val="typeahead-active-ul"/>
       <str val=""/>
       <check card="1" diag="0|2||ixsl:set-property">
        <slash>
         <slash simple="1">
          <ifCall name="ixsl:page" type="document-node()?"/>
          <axis name="child" nodeTest="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='html';"/>
         </slash>
         <axis name="child" nodeTest="element(Q{}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='body';"/>
        </slash>
       </check>
      </ifCall>
     </sequence>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id="88" binds="42">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg540074516" type="xs:string" line="245" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="245" name="concat">
    <gVarRef name="Q{}baseArticleURL" bSlot="0"/>
    <str val="&amp;wdb="/>
   </fn>
  </globalVariable>
 </co>
 <co id="75" binds="10">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg438509736" type="xs:string*" line="147" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c() {return true;};">
   <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="147" name="tokenize">
    <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||tokenize">
     <check card="?" diag="0|0||tokenize">
      <cvUntyped to="xs:string">
       <data>
        <gVarRef name="Q{}dictionaryOutputOrder" bSlot="0"/>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <str val="\s+"/>
    <str val=""/>
   </fn>
  </globalVariable>
 </co>
 <co id="39" binds="87">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg254878225" type="xs:string" line="31" module="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="31" name="concat">
    <gVarRef name="Q{}baseListURL" bSlot="0"/>
    <str val="&amp;index="/>
   </fn>
  </globalVariable>
 </co>
 <co id="89" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg311868303" type="xs:boolean" line="13" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="13" op="lt" comp="CalVC">
    <fn name="current-date"/>
    <atomic val="1957-11-05" type="xs:date"/>
   </vc>
  </globalVariable>
 </co>
 <co id="72" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg662581632" type="xs:boolean" line="13" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="13" op="lt" comp="CalVC">
    <fn name="current-date"/>
    <atomic val="1957-11-05" type="xs:date"/>
   </vc>
  </globalVariable>
 </co>
 <co id="61" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg674645313" type="xs:boolean" line="13" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="13" op="lt" comp="CalVC">
    <fn name="current-date"/>
    <atomic val="1957-11-05" type="xs:date"/>
   </vc>
  </globalVariable>
 </co>
 <co id="90" binds="">
  <globalVariable name="Q{}RESULT_SORTREVERSE_PROPERTY" type="xs:string" line="42" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="result-sortreverse"/>
  </globalVariable>
 </co>
 <co id="91" binds="">
  <globalVariable name="Q{}RESULT_TABDIV_ID_PROPERTY" type="xs:string" line="40" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="result-tabdiv-id"/>
  </globalVariable>
 </co>
 <co id="31" binds="50">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg979012785" type="xs:string" line="326" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="326" name="concat">
    <fn name="concat">
     <gVarRef name="Q{}baseSearchURL" bSlot="0"/>
     <str val="&amp;conc=true&amp;xmlerror=true"/>
    </fn>
    <str val="&amp;"/>
   </fn>
  </globalVariable>
 </co>
 <co id="92" binds="">
  <globalVariable name="Q{}min-hoogte-title" type="xs:string" line="12" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="Klik voor de normale hoogte"/>
  </globalVariable>
 </co>
 <co id="46" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1785880895" type="xs:boolean" line="13" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <vc vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="13" op="lt" comp="CalVC">
    <fn name="current-date"/>
    <atomic val="1957-11-05" type="xs:date"/>
   </vc>
  </globalVariable>
 </co>
 <co id="84" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1369765450" type="xs:anyAtomicType*" line="306" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.anyAtomicType.cast(val);" jsCardCheck="function c() {return true;};">
   <data vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="306">
    <message>
     <valueOf role="select" flags="e">
      <str val="Geen woordenboeken geselecteerd"/>
     </valueOf>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </data>
  </globalVariable>
 </co>
 <co id="86" binds="93 30 5 4 8 11 34 62">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}select-tab" flags="os" line="120" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="7">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="121">
    <param name="tabid" slot="0" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|tabid">
      <check card="1" diag="8|0|XTTE0590|tabid">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="122" name="formdiv-inputs-and-selects" slot="1" flags="r" as="element(Q{}inputs-and-selects)">
     <treat role="conversion" as="element(Q{}inputs-and-selects)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='inputs-and-selects';" diag="8|0|XTTE0590|formdiv-inputs-and-selects">
      <check card="1" diag="8|0|XTTE0590|formdiv-inputs-and-selects">
       <supplied slot="1"/>
      </check>
     </treat>
    </param>
    <let line="124" var="text-input-uri-params" as="xs:string" slot="2" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-value-inputs-for-url" tailCall="false" bSlot="0" eval="6">
      <varRef name="formdiv-inputs-and-selects" slot="1"/>
     </ufCall>
     <let line="125" var="url-for-content" as="xs:string" slot="3" eval="7">
      <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-zoeken-url" tailCall="false" bSlot="1" eval="6 6">
       <varRef name="text-input-uri-params" slot="2"/>
       <varRef name="formdiv-inputs-and-selects" slot="1"/>
      </ufCall>
      <let line="128" var="result-tab-title" as="element()" slot="4" eval="7">
       <treat as="element()" jsTest="return item.nodeType==1;" diag="3|0|XTTE0570|result-tab-title">
        <check card="1" diag="3|0|XTTE0570|result-tab-title">
         <fn name="key">
          <str val="ids"/>
          <varRef name="tabid" slot="0"/>
         </fn>
        </check>
       </treat>
       <sequence line="129">
        <forEach>
         <slash>
          <slash simple="1">
           <varRef name="result-tab-title" slot="4"/>
           <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
          </slash>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         </slash>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="131" name="ixsl:set-attribute" type="item()*">
          <str val="class"/>
          <cvUntyped to="xs:string">
           <data>
            <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" tailCall="false" bSlot="2" eval="7 4">
             <ufCall line="130" name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="3" eval="8 0">
              <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
              <str val="active"/>
             </ufCall>
             <choose>
              <vc op="eq" onEmpty="0" comp="CCC">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
               </data>
               <varRef name="tabid" slot="0"/>
              </vc>
              <str val="active"/>
             </choose>
            </ufCall>
           </data>
          </cvUntyped>
         </ifCall>
        </forEach>
        <let line="135" var="tabdiv-id" as="xs:string" slot="5" eval="8">
         <cvUntyped line="54" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="substring-after">
            <check line="135" card="1" diag="0|0||ivdnt:strip-hash-from-id">
             <cvUntyped to="xs:string">
              <data>
               <slash>
                <slash simple="1">
                 <varRef name="result-tab-title" slot="4"/>
                 <axis name="child" nodeTest="element(Q{}a)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='a';"/>
                </slash>
                <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name=='href'"/>
               </slash>
              </data>
             </cvUntyped>
            </check>
            <str val="#"/>
           </fn>
          </cast>
         </cvUntyped>
         <let line="136" var="current-tab" as="element(Q{}div)" slot="6" eval="7">
          <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" tailCall="false" bSlot="4" eval="7">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||ivdnt:get-active-tabdiv">
            <dot flags="a"/>
           </treat>
          </ufCall>
          <sequence line="142">
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-property" type="item()*">
            <str val="url-for-content"/>
            <varRef name="url-for-content" slot="3"/>
            <check card="1" diag="0|2||ixsl:set-property">
             <ifCall name="ixsl:page" type="document-node()?"/>
            </check>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="143" name="ixsl:set-property" type="item()*">
            <str val="text-input-uri-params"/>
            <varRef name="text-input-uri-params" slot="2"/>
            <check card="1" diag="0|2||ixsl:set-property">
             <ifCall name="ixsl:page" type="document-node()?"/>
            </check>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="144" name="ixsl:set-property" type="item()*">
            <str val="current-question-description"/>
            <treat line="139" as="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==''&amp;&amp;q.local=='span';" diag="3|0|XTTE0570|question-description">
             <elem name="span" namespaces="xs=http://www.w3.org/2001/XMLSchema ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS array=http://www.w3.org/2005/xpath-functions/array ivdnt=http://www.ivdnt.org/xslt/namespaces">
              <copyOf flags="vsc">
               <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-question-description" tailCall="false" bSlot="5" eval="6">
                <varRef name="formdiv-inputs-and-selects" slot="1"/>
               </ufCall>
              </copyOf>
             </elem>
            </treat>
            <check card="1" diag="0|2||ixsl:set-property">
             <ifCall name="ixsl:page" type="document-node()?"/>
            </check>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="145" name="ixsl:set-property" type="item()*">
            <str val="result-tabdiv-id"/>
            <varRef name="tabdiv-id" slot="5"/>
            <check card="1" diag="0|2||ixsl:set-property">
             <ifCall name="ixsl:page" type="document-node()?"/>
            </check>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="146" name="ixsl:set-property" type="item()*">
            <str val="result-sortkeys"/>
            <str val=""/>
            <check card="1" diag="0|2||ixsl:set-property">
             <ifCall name="ixsl:page" type="document-node()?"/>
            </check>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="147" name="ixsl:set-property" type="item()*">
            <str val="result-sortreverse"/>
            <str val="false"/>
            <check card="1" diag="0|2||ixsl:set-property">
             <ifCall name="ixsl:page" type="document-node()?"/>
            </check>
           </ifCall>
           <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="150" name="ixsl:set-property" type="item()*">
            <str val="formdiv-inputs-and-selects"/>
            <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}add-formdiv-inputs-and-selects" tailCall="false" bSlot="6" eval="6 6">
             <varRef name="current-tab" slot="6"/>
             <varRef name="formdiv-inputs-and-selects" slot="1"/>
            </ufCall>
            <varRef name="current-tab" slot="6"/>
           </ifCall>
           <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="152" name="ivdnt:show-results" bSlot="7">
            <withParam name="url-for-content" flags="c" as="item()*">
             <varRef line="153" name="url-for-content" slot="3"/>
            </withParam>
            <withParam name="tabdiv-id" flags="c" as="xs:string">
             <varRef line="154" name="tabdiv-id" slot="5"/>
            </withParam>
            <withParam name="startline" flags="c" as="xs:integer">
             <int val="1"/>
            </withParam>
            <withParam name="originating-tabdiv" flags="c" as="element(Q{}div)">
             <varRef line="156" name="current-tab" slot="6"/>
            </withParam>
            <withParam name="text-input-uri-params" flags="t" as="xs:string">
             <varRef line="157" name="text-input-uri-params" slot="2"/>
            </withParam>
           </callT>
          </sequence>
         </let>
        </let>
       </sequence>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="94" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}is-text-or-select-field" line="85" module="file:/D:/code/GTB-html/source/xslt/history.xslt" eval="8" flags="pU" as="xs:boolean" slots="1">
   <arg name="input" as="element(Q{}input-or-select)"/>
   <fn role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/history.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="87" name="exists">
    <filter flags="b">
     <varRef name="input" slot="0"/>
     <or op="or">
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
       </data>
       <str val="text"/>
      </vc>
      <vc op="eq" onEmpty="0" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}element)" jsTest="return item.name=='element'"/>
       </data>
       <str val="select"/>
      </vc>
     </or>
    </filter>
   </fn>
  </function>
 </co>
 <co id="56" binds="78 78 78 56 56 82 73 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 56 95 95">
  <mode name="Q{}render-results" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.0" seq="4" rank="0" minImp="0" slots="0" flags="os" line="195" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}conc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='conc';"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="196" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="class" flags="l">
       <str val="gtb-conc-line"/>
      </att>
      <elem line="197" name="span" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-conc-voor"/>
        </att>
        <valueOf flags="el">
         <str val=" "/>
        </valueOf>
        <applyT mode="Q{}render-conc-attributes" bSlot="0">
         <axis role="select" name="attribute" nodeTest="attribute(Q{}voor)" jsTest="return item.name=='voor'"/>
        </applyT>
       </sequence>
      </elem>
      <elem line="198" name="span" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-conc-zoekwoord"/>
        </att>
        <applyT mode="Q{}render-conc-attributes" bSlot="1">
         <axis role="select" name="attribute" nodeTest="attribute(Q{}zoekwoord)" jsTest="return item.name=='zoekwoord'"/>
        </applyT>
       </sequence>
      </elem>
      <elem line="199" name="span" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-conc-na"/>
        </att>
        <valueOf flags="el">
         <str val=" "/>
        </valueOf>
        <applyT mode="Q{}render-conc-attributes" bSlot="2">
         <axis role="select" name="attribute" nodeTest="attribute(Q{}na)" jsTest="return item.name=='na'"/>
        </applyT>
       </sequence>
      </elem>
      <elem line="197" name="br" flags="l">
       <empty/>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="3" flags="os" line="24" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}results)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='results';"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="25">
     <param name="html" slot="0" flags="r" as="element(Q{}html)">
      <treat role="conversion" as="element(Q{}html)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='html';" diag="8|0|XTTE0590|html">
       <check card="1" diag="8|0|XTTE0590|html">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="26" name="startline" slot="1" flags="r" as="xs:integer">
      <treat role="conversion" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="8|0|XTTE0590|startline">
       <check card="1" diag="8|0|XTTE0590|startline">
        <cvUntyped to="xs:integer">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="28" var="first-result" as="element(Q{}result)?" slot="2" eval="7">
      <first>
       <axis name="child" nodeTest="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
      </first>
      <sequence line="29">
       <elem name="div" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <sequence>
         <att name="class" flags="l">
          <str val="gtb-results"/>
         </att>
         <applyT line="30" mode="Q{}render-results" bSlot="3">
          <axis role="select" name="child" nodeTest="element(Q{}statistics)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='statistics';"/>
         </applyT>
         <elem line="32" name="table" flags="l">
          <sequence>
           <att name="id" flags="l">
            <str val="gtb-result-table"/>
           </att>
           <att name="class" flags="l">
            <str val="table table-striped table-hover table-condensed"/>
           </att>
           <elem line="35" name="thead" flags="l">
            <elem name="tr" flags="l">
             <sequence>
              <elem name="th" flags="l">
               <sequence>
                <att name="class" flags="l">
                 <str val="gtb-wdbcol-line"/>
                </att>
                <valueOf flags="Sel">
                 <str val="Nr."/>
                </valueOf>
               </sequence>
              </elem>
              <elem line="36" name="th" flags="l">
               <sequence>
                <att name="class" flags="l">
                 <str val="gtb-wdbcol-wdb"/>
                </att>
                <valueOf flags="Sel">
                 <str val="Wdb"/>
                </valueOf>
               </sequence>
              </elem>
              <choose line="38">
               <fn line="21" name="exists">
                <filter line="38" flags="b">
                 <slash simple="1">
                  <dot type="element(Q{}results)"/>
                  <axis line="21" name="child" nodeTest="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
                 </slash>
                 <fn line="21" name="exists">
                  <axis name="attribute" nodeTest="attribute(Q{}titel)" jsTest="return item.name=='titel'"/>
                 </fn>
                </filter>
               </fn>
               <sequence line="39">
                <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-auteur"/>
                  </att>
                  <valueOf flags="Sel">
                   <str val="Auteur"/>
                  </valueOf>
                 </sequence>
                </elem>
                <elem line="40" name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-titel"/>
                  </att>
                  <valueOf flags="Sel">
                   <str val="Titel"/>
                  </valueOf>
                 </sequence>
                </elem>
                <elem line="41" name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-datering"/>
                  </att>
                  <valueOf flags="Sel">
                   <str val="Datering"/>
                  </valueOf>
                 </sequence>
                </elem>
                <elem line="42" name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-lokalisering"/>
                  </att>
                  <valueOf flags="Sel">
                   <str val="Lokalisering"/>
                  </valueOf>
                 </sequence>
                </elem>
               </sequence>
               <true/>
               <sequence line="45">
                <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-modern_lemma"/>
                  </att>
                  <valueOf flags="el">
                   <str val="Mod. Ned. trefwoord"/>
                  </valueOf>
                 </sequence>
                </elem>
                <elem line="46" name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-lemma"/>
                  </att>
                  <valueOf flags="el">
                   <str val="Origineel trefwoord"/>
                  </valueOf>
                 </sequence>
                </elem>
                <elem line="47" name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                 <sequence>
                  <att name="class" flags="l">
                   <str val="gtb-wdbcol-woordsoort"/>
                  </att>
                  <valueOf flags="Sel">
                   <str val="Woordsoort"/>
                  </valueOf>
                 </sequence>
                </elem>
                <choose line="48">
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="first-result" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}Verbinding)" jsTest="return item.name=='Verbinding'"/>
                  </slash>
                 </fn>
                 <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                  <sequence>
                   <att name="class" flags="l">
                    <str val="gtb-wdbcol-anders"/>
                   </att>
                   <valueOf flags="Sel">
                    <str val="Verbinding"/>
                   </valueOf>
                  </sequence>
                 </elem>
                </choose>
                <choose line="49">
                 <and op="and">
                  <fn name="exists">
                   <slash simple="1">
                    <varRef name="first-result" slot="2"/>
                    <axis name="attribute" nodeTest="attribute(Q{}hits)" jsTest="return item.name=='hits'"/>
                   </slash>
                  </fn>
                  <fn name="exists">
                   <slash simple="1">
                    <varRef name="first-result" slot="2"/>
                    <axis name="child" nodeTest="element(Q{}conc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='conc';"/>
                   </slash>
                  </fn>
                 </and>
                 <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                  <sequence>
                   <att name="class" flags="l">
                    <str val="gtb-wdbcol-anders"/>
                   </att>
                   <valueOf flags="el">
                    <str val="Freq. "/>
                   </valueOf>
                  </sequence>
                 </elem>
                </choose>
                <choose line="51">
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="first-result" slot="2"/>
                   <axis name="child" nodeTest="element(Q{}conc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='conc';"/>
                  </slash>
                 </fn>
                 <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                  <sequence>
                   <att name="class" flags="l">
                    <str val="gtb-wdbcol-anders"/>
                   </att>
                   <valueOf flags="Sel">
                    <str val="Concordantie"/>
                   </valueOf>
                  </sequence>
                 </elem>
                 <fn line="52" name="exists">
                  <slash simple="1">
                   <varRef name="first-result" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}Betekenis)" jsTest="return item.name=='Betekenis'"/>
                  </slash>
                 </fn>
                 <elem line="52" name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                  <sequence>
                   <att name="class" flags="l">
                    <str val="gtb-wdbcol-anders"/>
                   </att>
                   <valueOf flags="Sel">
                    <str val="Betekenis"/>
                   </valueOf>
                  </sequence>
                 </elem>
                </choose>
                <choose line="54">
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="first-result" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}Kopsectie)" jsTest="return item.name=='Kopsectie'"/>
                  </slash>
                 </fn>
                 <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                  <sequence>
                   <att name="class" flags="l">
                    <str val="gtb-wdbcol-anders"/>
                   </att>
                   <valueOf flags="Sel">
                    <str val="Kopsectie"/>
                   </valueOf>
                  </sequence>
                 </elem>
                </choose>
                <choose line="55">
                 <fn name="exists">
                  <slash simple="1">
                   <varRef name="first-result" slot="2"/>
                   <axis name="attribute" nodeTest="attribute(Q{}Citaat)" jsTest="return item.name=='Citaat'"/>
                  </slash>
                 </fn>
                 <elem name="th" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
                  <sequence>
                   <att name="class" flags="l">
                    <str val="gtb-wdbcol-anders"/>
                   </att>
                   <valueOf flags="Sel">
                    <str val="Citaat"/>
                   </valueOf>
                  </sequence>
                 </elem>
                </choose>
               </sequence>
              </choose>
             </sequence>
            </elem>
           </elem>
           <elem line="61" name="tbody" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
            <applyT mode="Q{}render-results" bSlot="4">
             <axis role="select" name="child" nodeTest="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
            </applyT>
           </elem>
          </sequence>
         </elem>
        </sequence>
       </elem>
       <elem line="66" name="div" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <sequence>
         <att name="class" flags="l">
          <str val="gtb-pagineringsknoppen"/>
         </att>
         <att name="id" flags="l">
          <str val="gtb-result-table_paginate"/>
         </att>
         <elem line="67" name="ul" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
          <sequence>
           <att name="class" flags="l">
            <str val="pagination"/>
           </att>
           <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="68" name="ivdnt:gen-pagination" bSlot="5">
            <withParam name="statistics" flags="c" as="element(Q{}statistics)*">
             <check line="69" card="1" diag="8|0||statistics">
              <axis name="child" nodeTest="element(Q{}statistics)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='statistics';"/>
             </check>
            </withParam>
            <withParam name="currentStartLine" flags="c" as="xs:integer">
             <varRef line="70" name="startline" slot="1"/>
            </withParam>
           </callT>
          </sequence>
         </elem>
        </sequence>
       </elem>
       <copyOf line="75" flags="vsc">
        <docOrder intra="1">
         <slash>
          <slash>
           <varRef name="html" slot="0"/>
           <fn name="key">
            <str val="ids"/>
            <str val="resultaatknoppen"/>
           </fn>
          </slash>
          <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
         </slash>
        </docOrder>
       </copyOf>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="156" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}stat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='stat';"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="159">
     <elem name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <sequence>
       <att name="class" flags="l">
        <str val="gtbstatitem"/>
       </att>
       <elem name="a" flags="l">
        <sequence>
         <att name="href" flags="l">
          <str val="#"/>
         </att>
         <att name="data-startline" flags="l">
          <convert from="xs:integer" to="xs:string">
           <choose>
            <fn name="empty">
             <slash simple="1">
              <dot type="element(Q{}stat)"/>
              <axis name="preceding-sibling" nodeTest="element(Q{}stat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='stat';"/>
             </slash>
            </fn>
            <int val="1"/>
            <true/>
            <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}calculate-dictionary-startline" tailCall="false" bSlot="6" eval="7 7">
             <check card="1" diag="0|0||ivdnt:calculate-dictionary-startline">
              <axis name="parent" nodeTest="element(Q{}statistics)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='statistics';"/>
             </check>
             <check card="1" diag="0|1||ivdnt:calculate-dictionary-startline">
              <cvUntyped to="xs:string">
               <data>
                <axis name="attribute" nodeTest="attribute(Q{}item)" jsTest="return item.name=='item'"/>
               </data>
              </cvUntyped>
             </check>
            </ufCall>
           </choose>
          </convert>
         </att>
         <valueOf flags="el">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}item)" jsTest="return item.name=='item'"/>
           </data>
          </convert>
         </valueOf>
        </sequence>
       </elem>
       <valueOf flags="el">
        <str val=": "/>
       </valueOf>
      </sequence>
     </elem>
     <elem line="160" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <sequence>
       <att name="class" flags="l">
        <str val="gtb-statcount"/>
       </att>
       <att name="title" flags="l">
        <fn name="concat">
         <str val="aantal hits: "/>
         <fn name="string">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}hits)" jsTest="return item.name=='hits'"/>
           </data>
          </convert>
         </fn>
         <str val=" in "/>
         <fn name="string">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}count)" jsTest="return item.name=='count'"/>
           </data>
          </convert>
         </fn>
         <str val=" "/>
         <choose line="157">
          <vc op="eq" onEmpty="0" comp="CAVC">
           <cast as="xs:integer" emptiable="1">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{}count)" jsTest="return item.name=='count'"/>
            </data>
           </cast>
           <int val="1"/>
          </vc>
          <str val="document"/>
          <true/>
          <str val="documenten"/>
         </choose>
        </fn>
       </att>
       <valueOf flags="el">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}count)" jsTest="return item.name=='count'"/>
         </data>
        </convert>
       </valueOf>
      </sequence>
     </elem>
     <choose line="161">
      <fn name="exists">
       <axis name="following-sibling" nodeTest="element(Q{}stat)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='stat';"/>
      </fn>
      <elem line="162" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-statseparator"/>
        </att>
        <valueOf flags="el">
         <str val=" - "/>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="3" rank="0" minImp="0" slots="0" flags="os" line="166" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="168" name="tr" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="class" flags="l">
       <str val="gtb-result-row"/>
      </att>
      <applyT line="169" mode="Q{}render-results" bSlot="7">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}line)" jsTest="return item.name=='line'"/>
      </applyT>
      <applyT line="170" mode="Q{}render-results" bSlot="8">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Wdb)" jsTest="return item.name=='Wdb'"/>
      </applyT>
      <applyT line="171" mode="Q{}render-results" bSlot="9">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Modern_lemma)" jsTest="return item.name=='Modern_lemma'"/>
      </applyT>
      <applyT line="172" mode="Q{}render-results" bSlot="10">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Lemma)" jsTest="return item.name=='Lemma'"/>
      </applyT>
      <applyT line="173" mode="Q{}render-results" bSlot="11">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Woordsoort)" jsTest="return item.name=='Woordsoort'"/>
      </applyT>
      <applyT line="174" mode="Q{}render-results" bSlot="12">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Verbinding)" jsTest="return item.name=='Verbinding'"/>
      </applyT>
      <choose line="176">
       <fn name="exists">
        <axis name="child" nodeTest="element(Q{}conc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='conc';"/>
       </fn>
       <sequence line="177">
        <applyT mode="Q{}render-results" bSlot="13">
         <axis role="select" name="attribute" nodeTest="attribute(Q{}hits)" jsTest="return item.name=='hits'"/>
        </applyT>
        <elem line="178" name="td" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
         <sequence>
          <att name="class" flags="l">
           <str val="gtb-conc"/>
          </att>
          <elem line="179" name="div" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
           <sequence>
            <att name="class" flags="l">
             <str val="gtb-conc gtb-cell-small"/>
            </att>
            <att name="title" flags="l">
             <str val="Klik voor maximale hoogte"/>
            </att>
            <applyT mode="Q{}render-results" bSlot="14">
             <axis role="select" name="child" nodeTest="element(Q{}conc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='conc';"/>
            </applyT>
           </sequence>
          </elem>
         </sequence>
        </elem>
       </sequence>
       <fn line="182" name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}Betekenis)" jsTest="return item.name=='Betekenis'"/>
       </fn>
       <applyT line="182" mode="Q{}render-results" bSlot="15">
        <axis role="select" name="attribute" nodeTest="attribute(Q{}Betekenis)" jsTest="return item.name=='Betekenis'"/>
       </applyT>
      </choose>
      <applyT line="184" mode="Q{}render-results" bSlot="16">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Kopsectie)" jsTest="return item.name=='Kopsectie'"/>
      </applyT>
      <applyT line="185" mode="Q{}render-results" bSlot="17">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}Citaat)" jsTest="return item.name=='Citaat'"/>
      </applyT>
      <applyT line="188" mode="Q{}render-results" bSlot="18">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}auteur)" jsTest="return item.name=='auteur'"/>
      </applyT>
      <applyT line="189" mode="Q{}render-results" bSlot="19">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}titel)" jsTest="return item.name=='titel'"/>
      </applyT>
      <applyT line="190" mode="Q{}render-results" bSlot="20">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}van)" jsTest="return item.name=='van'"/>
      </applyT>
      <applyT line="191" mode="Q{}render-results" bSlot="21">
       <axis role="select" name="attribute" nodeTest="attribute(Q{}locatie)" jsTest="return item.name=='locatie'"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="150" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}statistics)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='statistics';"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="151" name="p" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="class" flags="l">
       <str val="gtb-statistics"/>
      </att>
      <applyT line="152" mode="Q{}render-results" flags="i" bSlot="22">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="5" rank="1" minImp="0" slots="2" flags="os" line="208" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     <p.nodeTest test="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
    </p.withUpper>
    <let role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="210" var="class" as="xs:string" slot="0" eval="8">
     <fn name="concat">
      <fn name="concat">
       <str val="gtb-"/>
       <fn name="lower-case">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
       </fn>
      </fn>
      <choose line="209">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Wdb"/>
       </vc>
       <fn name="concat">
        <str val=" gtb-wdb-"/>
        <fn name="translate">
         <fn name="lower-case">
          <cvUntyped to="xs:string">
           <data>
            <dot type="attribute()"/>
           </data>
          </cvUntyped>
         </fn>
         <str val=" "/>
         <str val="_"/>
        </fn>
       </fn>
       <true/>
       <str val=""/>
      </choose>
     </fn>
     <let line="211" var="colclass" as="xs:string" slot="1" eval="8">
      <fn name="concat">
       <str val="gtb-wdbcol-"/>
       <fn name="lower-case">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
       </fn>
      </fn>
      <choose line="213">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="lower-case">
         <fn name="local-name">
          <dot type="attribute()"/>
         </fn>
        </fn>
        <str val="betekenis"/>
       </vc>
       <elem line="214" name="td" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <sequence>
         <att name="class" flags="l">
          <fn name="concat">
           <varRef name="class" slot="0"/>
           <str val=" "/>
           <varRef name="colclass" slot="1"/>
          </fn>
         </att>
         <elem name="div" flags="l" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
          <sequence>
           <att name="class" flags="l">
            <fn name="concat">
             <varRef name="class" slot="0"/>
             <str val=" gtb-cell-small"/>
            </fn>
           </att>
           <att name="title" flags="l">
            <str val="Klik voor maximale hoogte"/>
           </att>
           <applyT mode="Q{}render-result-attributes" bSlot="23">
            <dot role="select" type="attribute()"/>
           </applyT>
          </sequence>
         </elem>
        </sequence>
       </elem>
       <true/>
       <elem line="217" name="td" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
        <sequence>
         <att name="class" flags="l">
          <fn name="concat">
           <varRef name="class" slot="0"/>
           <str val=" "/>
           <varRef name="colclass" slot="1"/>
          </fn>
         </att>
         <applyT mode="Q{}render-result-attributes" bSlot="24">
          <dot role="select" type="attribute()"/>
         </applyT>
        </sequence>
       </elem>
      </choose>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="23" binds="20 19">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}typeahead-next-value" flags="os" line="268" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" slots="2">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="269">
    <param name="ul" slot="0" flags="r" as="element(Q{}ul)">
     <treat role="conversion" as="element(Q{}ul)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='ul';" diag="8|0|XTTE0590|ul">
      <check card="1" diag="8|0|XTTE0590|ul">
       <supplied slot="0"/>
      </check>
     </treat>
    </param>
    <let line="270" var="active-li" as="element(Q{}li)" slot="1" eval="7">
     <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}find-active-li" tailCall="false" bSlot="0" eval="6">
      <varRef name="ul" slot="0"/>
     </ufCall>
     <forEach line="271">
      <slash simple="1">
       <varRef name="ul" slot="0"/>
       <axis name="child" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
      </slash>
      <choose line="273">
       <is op="is">
        <first>
         <slash simple="1">
          <dot type="element(Q{}li)"/>
          <axis name="preceding-sibling" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
         </slash>
        </first>
        <varRef name="active-li" slot="1"/>
       </is>
       <sequence line="274">
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
         <str val="class"/>
         <str val="active"/>
        </ifCall>
        <callT xmlns:ivdnt="http://www.ivdnt.org/xslt/namespaces" line="275" name="ivdnt:typeahead-select" bSlot="1">
         <withParam name="selected-listitem" flags="c" as="item()">
          <dot line="276" type="element(Q{}li)"/>
         </withParam>
        </callT>
       </sequence>
       <fn line="279" name="exists">
        <axis name="following-sibling" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
       </fn>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="280" name="ixsl:remove-attribute" type="item()*">
        <str val="class"/>
        <str val=""/>
       </ifCall>
      </choose>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id="45" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1895054717" type="item()" line="187" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n==1;};">
   <check vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="187" card="1" diag="0|0||ixsl:call">
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:window" type="item()?"/>
   </check>
  </globalVariable>
 </co>
 <co id="96" binds="97">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1052678206" type="xs:string" line="267" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <fn vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="267" name="concat">
    <gVarRef name="Q{}baseArticleContentURL" bSlot="0"/>
    <str val="&amp;wdb="/>
   </fn>
  </globalVariable>
 </co>
 <co id="98" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1796492155" type="item()" line="193" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n==1;};">
   <check vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="193" card="1" diag="0|0||ixsl:call">
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:window" type="item()?"/>
   </check>
  </globalVariable>
 </co>
 <co id="95" binds="35 96 35 88 35">
  <mode name="Q{}render-result-attributes" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}auteur)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='auteur'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="234">
     <callT name="parse-result-attributes" bSlot="0"/>
     <choose line="236">
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Lemma"/>
       </vc>
       <atomSing card="?" diag="1|0||ne">
        <slash>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
        </slash>
       </atomSing>
      </and>
      <elem line="237" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-homoniemnr"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Verbinding)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Verbinding'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="234">
     <callT name="parse-result-attributes" bSlot="0"/>
     <choose line="236">
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Lemma"/>
       </vc>
       <atomSing card="?" diag="1|0||ne">
        <slash>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
        </slash>
       </atomSing>
      </and>
      <elem line="237" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-homoniemnr"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Modern_lemma)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Modern_lemma'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="234">
     <callT name="parse-result-attributes" bSlot="0"/>
     <choose line="236">
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Lemma"/>
       </vc>
       <atomSing card="?" diag="1|0||ne">
        <slash>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
        </slash>
       </atomSing>
      </and>
      <elem line="237" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-homoniemnr"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Citaat)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Citaat'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="234">
     <callT name="parse-result-attributes" bSlot="0"/>
     <choose line="236">
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Lemma"/>
       </vc>
       <atomSing card="?" diag="1|0||ne">
        <slash>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
        </slash>
       </atomSing>
      </and>
      <elem line="237" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-homoniemnr"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="228" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}locatie)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='locatie'"/>
    <valueOf role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="230">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute()"/>
      </data>
     </convert>
    </valueOf>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="228" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Line)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Line'"/>
    <valueOf role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="230">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute()"/>
      </data>
     </convert>
    </valueOf>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="228" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Woordsoort)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Woordsoort'"/>
    <valueOf role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="230">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute()"/>
      </data>
     </convert>
    </valueOf>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="4" rank="0" minImp="0" slots="1" flags="os" line="252" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}titel)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='titel'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="253">
     <param name="text-input-uri-params" slot="0" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|text-input-uri-params">
       <check card="1" diag="8|0|XTTE0590|text-input-uri-params">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line="268" name="a" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <sequence>
       <att name="href" flags="l">
        <fn line="267" name="concat">
         <fn name="concat">
          <fn name="concat">
           <fn name="concat">
            <fn name="concat">
             <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1052678206" bSlot="1"/>
             <atomSing card="?" diag="0|1||concat">
              <slash>
               <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
               <axis name="attribute" nodeTest="attribute(Q{}Wdb)" jsTest="return item.name=='Wdb'"/>
              </slash>
             </atomSing>
            </fn>
            <str val="BRONNEN&amp;id="/>
           </fn>
           <atomSing card="?" diag="0|1||concat">
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
            </slash>
           </atomSing>
          </fn>
          <str val="&amp;"/>
         </fn>
         <varRef name="text-input-uri-params" slot="0"/>
        </fn>
       </att>
       <att name="target" flags="l">
        <str val="_blank"/>
       </att>
       <callT line="269" name="parse-result-attributes" bSlot="2"/>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="228" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Wdb)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Wdb'"/>
    <valueOf role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="230">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute()"/>
      </data>
     </convert>
    </valueOf>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Kopsectie)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Kopsectie'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="234">
     <callT name="parse-result-attributes" bSlot="0"/>
     <choose line="236">
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Lemma"/>
       </vc>
       <atomSing card="?" diag="1|0||ne">
        <slash>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
        </slash>
       </atomSing>
      </and>
      <elem line="237" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-homoniemnr"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="223" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}van)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='van'"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="225" name="td" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="class" flags="l">
       <str val="gtb-van"/>
      </att>
      <valueOf flags="el">
       <choose line="224">
        <vc op="eq" onEmpty="0" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <atomSing card="?" diag="1|0||eq">
          <dot type="attribute(Q{}van)"/>
         </atomSing>
         <atomSing card="?" diag="1|1||eq">
          <slash>
           <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
           <axis name="attribute" nodeTest="attribute(Q{}tot)" jsTest="return item.name=='tot'"/>
          </slash>
         </atomSing>
        </vc>
        <cvUntyped to="xs:string">
         <data>
          <dot type="attribute(Q{}van)"/>
         </data>
        </cvUntyped>
        <true/>
        <fn name="concat">
         <fn name="concat">
          <atomSing card="?" diag="0|0||concat">
           <dot type="attribute(Q{}van)"/>
          </atomSing>
          <str val=" - "/>
         </fn>
         <atomSing card="?" diag="0|1||concat">
          <slash>
           <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
           <axis name="attribute" nodeTest="attribute(Q{}tot)" jsTest="return item.name=='tot'"/>
          </slash>
         </atomSing>
        </fn>
       </choose>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="228" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}hits)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='hits'"/>
    <valueOf role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="230">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute()"/>
      </data>
     </convert>
    </valueOf>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="3" rank="0" minImp="0" slots="1" flags="os" line="241" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Lemma)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Lemma'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="242">
     <param name="text-input-uri-params" slot="0" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|text-input-uri-params">
       <check card="1" diag="8|0|XTTE0590|text-input-uri-params">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <elem line="246" name="a" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
      <sequence>
       <att name="href" flags="l">
        <fn line="245" name="concat">
         <fn name="concat">
          <fn name="concat">
           <fn name="concat">
            <fn name="concat">
             <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg540074516" bSlot="3"/>
             <atomSing card="?" diag="0|1||concat">
              <slash>
               <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
               <axis name="attribute" nodeTest="attribute(Q{}Wdb)" jsTest="return item.name=='Wdb'"/>
              </slash>
             </atomSing>
            </fn>
            <str val="&amp;id="/>
           </fn>
           <atomSing card="?" diag="0|1||concat">
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
            </slash>
           </atomSing>
          </fn>
          <str val="&amp;"/>
         </fn>
         <varRef name="text-input-uri-params" slot="0"/>
        </fn>
       </att>
       <att name="target" flags="l">
        <str val="_blank"/>
       </att>
       <callT line="247" name="parse-result-attributes" bSlot="4"/>
       <elem line="248" name="span" flags="l">
        <sequence>
         <att name="class" flags="l">
          <str val="gtb-homoniemnr"/>
         </att>
         <valueOf flags="el">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <slash>
              <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
              <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
             </slash>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="233" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute(Q{}Betekenis)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='Betekenis'"/>
    <sequence role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="234">
     <callT name="parse-result-attributes" bSlot="0"/>
     <choose line="236">
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="attribute()"/>
        </fn>
        <str val="Lemma"/>
       </vc>
       <atomSing card="?" diag="1|0||ne">
        <slash>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
        </slash>
       </atomSing>
      </and>
      <elem line="237" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
       <sequence>
        <att name="class" flags="l">
         <str val="gtb-homoniemnr"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash>
             <axis name="parent" nodeTest="element()" jsTest="return item.nodeType==1;"/>
             <axis name="attribute" nodeTest="attribute(Q{}Homoniemnr)" jsTest="return item.name=='Homoniemnr'"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="67" binds="40 40 40 17 40 17">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}woordsoortvalue" line="247" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="8" flags="pU" as="xs:string" slots="4">
   <arg name="context" as="node()"/>
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="249" var="topdiv" as="element(Q{}div)?" slot="1" eval="8">
    <slash>
     <varRef name="context" slot="0"/>
     <first>
      <filter flags="">
       <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
       <vc op="eq" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}data-modaltype)" jsTest="return item.name=='data-modaltype'"/>
        </data>
        <str val="woordsoortzoeken"/>
       </vc>
      </filter>
     </first>
    </slash>
    <cvUntyped line="276" to="xs:string">
     <cast as="xs:untypedAtomic" emptiable="0">
      <fn name="string-join">
       <cvUntyped line="253" to="xs:string">
        <sequence>
         <data>
          <forEach>
           <docOrder intra="0">
            <filter flags="b">
             <filter flags="b">
              <slash>
               <varRef name="topdiv" slot="1"/>
               <axis name="descendant" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
              </slash>
              <fn name="exists">
               <axis name="attribute" nodeTest="attribute(Q{}data-woordsoortgroep)" jsTest="return item.name=='data-woordsoortgroep'"/>
              </fn>
             </filter>
             <fn name="exists">
              <filter flags="b">
               <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
                 </data>
                 <str val="checkbox"/>
                </vc>
                <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="0" eval="7">
                 <dot type="element(Q{}input)"/>
                </ufCall>
               </and>
              </filter>
             </fn>
            </filter>
           </docOrder>
           <choose line="255">
            <fn name="exists">
             <filter flags="b">
              <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
              <and op="and">
               <vc op="eq" onEmpty="0" comp="CCC">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
                </data>
                <str val="checkbox"/>
               </vc>
               <fn name="not">
                <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="1" eval="7">
                 <dot type="element(Q{}input)"/>
                </ufCall>
               </fn>
              </and>
             </filter>
            </fn>
            <let line="258" var="input-values-joined" as="xs:string" slot="2" eval="8">
             <fn name="string-join">
              <check line="257" card="+" diag="3|0|XTTE0570|input-values">
               <for var="i" as="element(Q{}input)" slot="3">
                <filter role="in" flags="b">
                 <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
                 <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="2" eval="7">
                  <dot type="element(Q{}input)"/>
                 </ufCall>
                </filter>
                <ufCall role="return" name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="3" eval="6">
                 <varRef name="i" slot="3"/>
                </ufCall>
               </for>
              </check>
              <str val="|"/>
             </fn>
             <valueOf line="261">
              <fn name="concat">
               <fn name="concat">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}data-woordsoortgroep)" jsTest="return item.name=='data-woordsoortgroep'"/>
                </data>
                <choose line="259">
                 <fn name="not">
                  <varRef name="input-values-joined" slot="2"/>
                 </fn>
                 <str val=""/>
                 <true/>
                 <fn name="concat">
                  <fn name="concat">
                   <str val="&lt;"/>
                   <varRef name="input-values-joined" slot="2"/>
                  </fn>
                  <str val="&gt;"/>
                 </fn>
                </choose>
               </fn>
               <str val="."/>
              </fn>
             </valueOf>
            </let>
            <true/>
            <valueOf line="265">
             <fn name="concat">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}data-woordsoortgroep)" jsTest="return item.name=='data-woordsoortgroep'"/>
              </data>
              <str val="."/>
             </fn>
            </valueOf>
           </choose>
          </forEach>
         </data>
         <data line="270">
          <forEach>
           <docOrder intra="0">
            <filter flags="b">
             <slash>
              <varRef name="topdiv" slot="1"/>
              <axis name="descendant" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
             </slash>
             <and op="and">
              <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}is-checked" tailCall="false" bSlot="4" eval="7">
               <dot type="element(Q{}input)"/>
              </ufCall>
              <fn name="empty">
               <filter flags="b">
                <axis name="ancestor" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
                <fn name="exists">
                 <axis name="attribute" nodeTest="attribute(Q{}data-woordsoortgroep)" jsTest="return item.name=='data-woordsoortgroep'"/>
                </fn>
               </filter>
              </fn>
             </and>
            </filter>
           </docOrder>
           <valueOf line="271">
            <fn name="concat">
             <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" tailCall="false" bSlot="5" eval="7">
              <dot type="element(Q{}input)"/>
             </ufCall>
             <str val="."/>
            </fn>
           </valueOf>
          </forEach>
         </data>
        </sequence>
       </cvUntyped>
       <str val=" "/>
      </fn>
     </cast>
    </cvUntyped>
   </let>
  </function>
 </co>
 <co id="97" vis="PUBLIC" binds="">
  <globalParam name="Q{}baseArticleContentURL" type="xs:string" line="0" visibility="PUBLIC" flags="r" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};"/>
 </co>
 <co id="63" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-url-for-content" line="350" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="7" flags="pU" as="xs:string" slots="2">
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="351" var="url-for-content" as="xs:string" slot="0" eval="7">
    <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|url-for-content">
     <check card="1" diag="3|0|XTTE0570|url-for-content">
      <cvUntyped to="xs:string">
       <data>
        <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
         <ifCall name="ixsl:page" type="document-node()?"/>
         <str val="url-for-content"/>
        </ifCall>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <let line="352" var="sortkeys" as="xs:string" slot="1" eval="7">
     <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|sortkeys">
      <check card="1" diag="3|0|XTTE0570|sortkeys">
       <cvUntyped to="xs:string">
        <data>
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
          <ifCall name="ixsl:page" type="document-node()?"/>
          <str val="result-sortkeys"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <choose line="354">
      <varRef name="sortkeys" slot="1"/>
      <cvUntyped line="355" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <fn name="concat">
         <fn name="concat">
          <fn name="concat">
           <fn name="concat">
            <varRef name="url-for-content" slot="0"/>
            <str val="&amp;sort="/>
           </fn>
           <fn name="encode-for-uri">
            <varRef name="sortkeys" slot="1"/>
           </fn>
          </fn>
          <str val="&amp;reverse="/>
         </fn>
         <atomSing card="?" diag="0|1||concat">
          <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
           <ifCall name="ixsl:page" type="document-node()?"/>
           <str val="result-sortreverse"/>
          </ifCall>
         </atomSing>
        </fn>
       </cast>
      </cvUntyped>
      <true/>
      <cvUntyped line="357" to="xs:string">
       <cast as="xs:untypedAtomic" emptiable="0">
        <varRef name="url-for-content" slot="0"/>
       </cast>
      </cvUntyped>
     </choose>
    </let>
   </let>
  </function>
 </co>
 <co id="99" binds="57 57">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}linenumber2pagenumber" line="121" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" eval="7" flags="pU" as="xs:integer" slots="1">
   <arg name="linenumber" as="xs:integer"/>
   <cast role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="123" as="xs:integer" emptiable="0">
    <arith op="div" calc="i/i">
     <arith op="-" calc="i-i">
      <arith op="+" calc="i+i">
       <varRef name="linenumber" slot="0"/>
       <gVarRef name="Q{}maxLinesInResultPage" bSlot="0"/>
      </arith>
      <int val="1"/>
     </arith>
     <gVarRef name="Q{}maxLinesInResultPage" bSlot="1"/>
    </arith>
   </cast>
  </function>
 </co>
 <co id="17" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-input-value" line="52" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="7" flags="pU" as="xs:string" slots="1">
   <arg name="input" as="element()"/>
   <treat role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="54" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="5|0|XTTE0780|ivdnt:get-input-value">
    <check card="1" diag="5|0|XTTE0780|ivdnt:get-input-value">
     <cvUntyped to="xs:string">
      <data>
       <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
        <varRef name="input" slot="0"/>
        <str val="value"/>
       </ifCall>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </function>
 </co>
 <co id="100" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}is-bronnenlijst-result" line="19" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" eval="8" flags="pU" as="xs:boolean" slots="1">
   <arg name="results-element" as="element(Q{}results)"/>
   <fn role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="21" name="exists">
    <filter flags="b">
     <slash simple="1">
      <varRef name="results-element" slot="0"/>
      <axis name="child" nodeTest="element(Q{}result)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='result';"/>
     </slash>
     <fn name="exists">
      <axis name="attribute" nodeTest="attribute(Q{}titel)" jsTest="return item.name=='titel'"/>
     </fn>
    </filter>
   </fn>
  </function>
 </co>
 <co id="101" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}quote" line="14" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" eval="8" flags="pU" as="xs:string" slots="1">
   <arg name="string" as="xs:string"/>
   <cvUntyped role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="16" to="xs:string">
    <cast as="xs:untypedAtomic" emptiable="0">
     <fn name="concat">
      <fn name="concat">
       <str val="&#34;"/>
       <fn name="replace">
        <varRef name="string" slot="0"/>
        <str val="&#34;"/>
        <str val="\\&#34;"/>
        <str val=""/>
       </fn>
      </fn>
      <str val="&#34;"/>
     </fn>
    </cast>
   </cvUntyped>
  </function>
 </co>
 <co id="102" binds="">
  <globalVariable name="Q{}FORMDIV_INPUTS_AND_SELECTS_PROPERTY" type="xs:string" line="39" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="formdiv-inputs-and-selects"/>
  </globalVariable>
 </co>
 <co id="36" binds="36 36 36 36 36 36">
  <mode name="Q{}parse-result-attribute" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" line="285" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="286" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <str val="gtb-art-"/>
        <fn name="lower-case">
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </fn>
       </fn>
      </att>
      <applyT line="287" mode="Q{}parse-result-attribute" bSlot="0">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="288" mode="Q{}parse-result-attribute" flags="i" bSlot="1">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="2" rank="2" minImp="0" slots="0" flags="os" line="296" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}font)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='font';"/>
     <axis vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="296" name="attribute" nodeTest="attribute(Q{}color)" jsTest="return item.name=='color'"/>
    </p.withPredicate>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="297" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="style" flags="l">
       <fn name="concat">
        <str val="color: "/>
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}color)" jsTest="return item.name=='color'"/>
          </data>
         </convert>
        </fn>
       </fn>
      </att>
      <applyT line="298" mode="Q{}parse-result-attribute" bSlot="2">
       <axis role="select" name="attribute" nodeTest="(attribute() except attribute(Q{}color))" jsTest="function a() {return SaxonJS.U.isAttr(item)};function b() {return item.name=='color'};return a()&amp;&amp;!b();"/>
      </applyT>
      <applyT line="299" mode="Q{}parse-result-attribute" flags="i" bSlot="3">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="2" rank="2" minImp="0" slots="0" flags="os" line="296" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}FONT)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='FONT';"/>
     <axis vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="296" name="attribute" nodeTest="attribute(Q{}color)" jsTest="return item.name=='color'"/>
    </p.withPredicate>
    <elem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="297" name="span" namespaces="ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces">
     <sequence>
      <att name="style" flags="l">
       <fn name="concat">
        <str val="color: "/>
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{}color)" jsTest="return item.name=='color'"/>
          </data>
         </convert>
        </fn>
       </fn>
      </att>
      <applyT line="298" mode="Q{}parse-result-attribute" bSlot="2">
       <axis role="select" name="attribute" nodeTest="(attribute() except attribute(Q{}color))" jsTest="function a() {return SaxonJS.U.isAttr(item)};function b() {return item.name=='color'};return a()&amp;&amp;!b();"/>
      </applyT>
      <applyT line="299" mode="Q{}parse-result-attribute" flags="i" bSlot="3">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="os" line="303" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}BR)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='BR';"/>
    <compElem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="304">
     <fn role="name" name="lower-case">
      <fn name="local-name">
       <dot type="element()"/>
      </fn>
     </fn>
     <sequence role="content" line="305">
      <applyT mode="Q{}parse-result-attribute" bSlot="4">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="306" mode="Q{}parse-result-attribute" flags="i" bSlot="5">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </compElem>
   </templateRule>
   <templateRule prec="1" prio="0.0" seq="3" rank="1" minImp="0" slots="0" flags="os" line="303" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="element(Q{}br)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='br';"/>
    <compElem role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="304">
     <fn role="name" name="lower-case">
      <fn name="local-name">
       <dot type="element()"/>
      </fn>
     </fn>
     <sequence role="content" line="305">
      <applyT mode="Q{}parse-result-attribute" bSlot="4">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="306" mode="Q{}parse-result-attribute" flags="i" bSlot="5">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </compElem>
   </templateRule>
   <templateRule prec="1" prio="-0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="292" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <compAtt role="action" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/render-results.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="293">
     <fn role="name" name="concat">
      <str val="data-"/>
      <fn name="lower-case">
       <fn name="name">
        <dot type="attribute()"/>
       </fn>
      </fn>
     </fn>
     <convert role="select" from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute()"/>
      </data>
     </convert>
    </compAtt>
   </templateRule>
  </mode>
 </co>
 <co id="68" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-my-typeahead-textfield" line="76" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" eval="7" flags="pU" as="element(Q{}input)" slots="1">
   <arg name="ul" as="element(Q{}ul)"/>
   <check role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="78" card="1" diag="5|0|XTTE0780|ivdnt:get-my-typeahead-textfield">
    <slash>
     <varRef name="ul" slot="0"/>
     <first>
      <filter flags="b">
       <axis name="preceding-sibling" nodeTest="element(Q{}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input';"/>
       <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
        <fn name="index-of">
         <fn name="tokenize">
          <fn name="string">
           <axis baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" line="78" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
          </fn>
          <str val="\s+"/>
          <str val=""/>
         </fn>
         <str val="typeahead"/>
        </fn>
       </fn>
      </filter>
     </first>
    </slash>
   </check>
  </function>
 </co>
 <co id="64" binds="5 4">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}replace-class-value" line="39" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" eval="7" flags="pU" as="attribute(Q{}class)" slots="3">
   <arg name="classlike-attr" as="attribute()?"/>
   <arg name="old-value" as="xs:string"/>
   <arg name="new-value" as="xs:string"/>
   <treat role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="44" as="attribute(Q{}class)" jsTest="return item.name=='class'" diag="5|0|XTTE0780|ivdnt:replace-class-value">
    <att name="class">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}add-class-values" tailCall="false" bSlot="0" eval="7 6">
        <ufCall name="Q{http://www.ivdnt.org/xslt/namespaces}remove-class-value" tailCall="false" bSlot="1" eval="6 6">
         <varRef name="classlike-attr" slot="0"/>
         <varRef name="old-value" slot="1"/>
        </ufCall>
        <varRef name="new-value" slot="2"/>
       </ufCall>
      </data>
     </convert>
    </att>
   </treat>
  </function>
 </co>
 <co id="8" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-active-tabdiv" line="57" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="7" flags="pU" as="element(Q{}div)" slots="1">
   <arg name="node-inside-tab" as="node()"/>
   <check role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="60" card="1" diag="5|0|XTTE0780|ivdnt:get-active-tabdiv">
    <filter line="59" flags="b">
     <slash simple="1">
      <check card="1" diag="3|0|XTTE0570|tab-content">
       <slash>
        <varRef name="node-inside-tab" slot="0"/>
        <fn name="reverse">
         <filter flags="b">
          <axis name="ancestor-or-self" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
          <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
           <fn name="index-of">
            <fn name="tokenize">
             <fn name="string">
              <axis baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="59" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
             </fn>
             <str val="\s+"/>
             <str val=""/>
            </fn>
            <str val="tab-content"/>
           </fn>
          </fn>
         </filter>
        </fn>
       </slash>
      </check>
      <axis line="60" name="child" nodeTest="element(Q{}div)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='div';"/>
     </slash>
     <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" module="file:/D:/code/GTB-html/source/xslt/utilities.xslt" line="19" name="exists">
      <fn name="index-of">
       <fn name="tokenize">
        <fn name="string">
         <axis baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" line="60" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </fn>
        <str val="\s+"/>
        <str val=""/>
       </fn>
       <str val="active"/>
      </fn>
     </fn>
    </filter>
   </check>
  </function>
 </co>
 <co id="41" binds="77">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}retrieve-typeahead-listitems" flags="os" line="45" module="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead-impl.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="46">
    <param name="url" slot="0" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|url">
      <check card="1" diag="8|0|XTTE0590|url">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <resultDoc line="48" global="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;" local="#&#xD;&#xA;#Thu Dec 07 14:37:40 CET 2017&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;">
     <str role="href" val="?."/>
     <applyT role="content" line="49" mode="Q{}render-typeahead-results" bSlot="0">
      <fn role="select" name="doc">
       <varRef name="url" slot="0"/>
      </fn>
     </applyT>
    </resultDoc>
   </sequence>
  </template>
 </co>
 <co id="103" binds="">
  <globalVariable name="Q{}max-hoogte-title" type="xs:string" line="11" module="file:/D:/code/GTB-html/source/xslt/render-results.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="Klik voor maximale hoogte"/>
  </globalVariable>
 </co>
 <co id="93" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}get-value-inputs-for-url" line="280" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" eval="8" flags="pU" as="xs:string" slots="3">
   <arg name="formdiv-inputs-and-selects" as="element(Q{}inputs-and-selects)"/>
   <let role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="289" var="domeininput" as="element(Q{}input-or-select)?" slot="1" eval="7">
    <check card="?" diag="3|0|XTTE0570|domeininput">
     <filter flags="b">
      <slash simple="1">
       <varRef name="formdiv-inputs-and-selects" slot="0"/>
       <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
      </slash>
      <and op="and">
       <and op="and">
        <vc op="eq" onEmpty="0" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
         </data>
         <str val="radio"/>
        </vc>
        <vc op="eq" onEmpty="0" comp="CCC">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
         </data>
         <str val="domein"/>
        </vc>
       </and>
       <vc op="eq" onEmpty="0" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}checked)" jsTest="return item.name=='checked'"/>
        </data>
        <str val="checked"/>
       </vc>
      </and>
     </filter>
    </check>
    <cvUntyped line="293" to="xs:string">
     <cast as="xs:untypedAtomic" emptiable="0">
      <fn name="concat">
       <fn name="concat">
        <fn name="concat">
         <fn name="string-join">
          <forEach line="283">
           <filter flags="b">
            <slash simple="1">
             <varRef name="formdiv-inputs-and-selects" slot="0"/>
             <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
            </slash>
            <or op="or">
             <vc op="eq" onEmpty="0" comp="CCC">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}element)" jsTest="return item.name=='element'"/>
              </data>
              <str val="select"/>
             </vc>
             <vc op="eq" onEmpty="0" comp="CCC">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}type)" jsTest="return item.name=='type'"/>
              </data>
              <str val="text"/>
             </vc>
            </or>
           </filter>
           <let line="285" var="value" as="xs:string" slot="2" eval="7">
            <check card="1" diag="3|0|XTTE0570|value">
             <cvUntyped to="xs:string">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
              </data>
             </cvUntyped>
            </check>
            <choose line="286">
             <fn name="not">
              <varRef name="value" slot="2"/>
             </fn>
             <empty/>
             <true/>
             <fn name="concat">
              <fn name="concat">
               <check line="284" card="1" diag="3|0|XTTE0570|name">
                <cvUntyped to="xs:string">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                 </data>
                </cvUntyped>
               </check>
               <str val="="/>
              </fn>
              <fn name="encode-for-uri">
               <varRef name="value" slot="2"/>
              </fn>
             </fn>
            </choose>
           </let>
          </forEach>
          <str val="&amp;"/>
         </fn>
         <str val="&amp;domein="/>
        </fn>
        <choose line="290">
         <fn name="exists">
          <varRef name="domeininput" slot="1"/>
         </fn>
         <check card="1" diag="3|0|XTTE0570|domein">
          <cast as="xs:integer" emptiable="1">
           <data>
            <slash simple="1">
             <varRef name="domeininput" slot="1"/>
             <axis name="attribute" nodeTest="attribute(Q{}value)" jsTest="return item.name=='value'"/>
            </slash>
           </data>
          </cast>
         </check>
         <true/>
         <int val="0"/>
        </choose>
       </fn>
       <choose line="291">
        <fn name="exists">
         <filter flags="">
          <slash simple="1">
           <varRef name="formdiv-inputs-and-selects" slot="0"/>
           <axis name="child" nodeTest="element(Q{}input-or-select)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='input-or-select';"/>
          </slash>
          <vc op="eq" comp="CCC">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{}data-concordance-output)" jsTest="return item.name=='data-concordance-output'"/>
           </data>
           <str val="true"/>
          </vc>
         </filter>
        </fn>
        <str val="&amp;conc=true"/>
        <true/>
        <str val=""/>
       </choose>
      </fn>
     </cast>
    </cvUntyped>
   </let>
  </function>
 </co>
 <co id="104" binds="">
  <globalVariable name="Q{}TEXT_INPUT_URI_PARAMS_PROPERTY" type="xs:string" line="37" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="text-input-uri-params"/>
  </globalVariable>
 </co>
 <co id="65" binds="98 89">
  <template name="Q{http://www.ivdnt.org/xslt/namespaces}print-result" flags="os" line="190" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" slots="1">
   <sequence role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="191">
    <param name="url-for-content" slot="0" flags="r" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|url-for-content">
      <check card="1" diag="8|0|XTTE0590|url-for-content">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <filter line="193" flags="ib">
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:call" type="item()*">
      <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1796492155" bSlot="0"/>
      <str val="openNewWindow"/>
      <arrayBlock>
       <varRef name="url-for-content" slot="0"/>
      </arrayBlock>
     </ifCall>
     <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg311868303" bSlot="1"/>
    </filter>
   </sequence>
  </template>
 </co>
 <co id="20" binds="">
  <function name="Q{http://www.ivdnt.org/xslt/namespaces}find-active-li" line="86" module="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" eval="7" flags="pU" as="element(Q{}li)" slots="2">
   <arg name="ul" as="element(Q{}ul)"/>
   <check role="body" vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema math=http://www.w3.org/2005/xpath-functions/math" line="88" card="1" diag="5|0|XTTE0780|ivdnt:find-active-li">
    <filter flags="b">
     <slash simple="1">
      <varRef name="ul" slot="0"/>
      <axis name="child" nodeTest="element(Q{}li)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='li';"/>
     </slash>
     <let var="li" as="element(Q{}li)" slot="1" eval="7">
      <dot type="element(Q{}li)"/>
      <and line="83" op="and">
       <fn name="exists">
        <varRef name="li" slot="1"/>
       </fn>
       <fn baseUri="file:/D:/code/GTB-html/source/xslt/utilities.xslt" name="exists">
        <fn name="index-of">
         <fn name="tokenize">
          <fn baseUri="file:/D:/code/GTB-html/source/xslt/typeahead.xslt" name="string">
           <slash simple="1">
            <varRef name="li" slot="1"/>
            <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           </slash>
          </fn>
          <str val="\s+"/>
          <str val=""/>
         </fn>
         <str val="active"/>
        </fn>
       </fn>
      </and>
     </let>
    </filter>
   </check>
  </function>
 </co>
 <overridden/>
 <key name="Q{}ids" line="32" module="file:/D:/code/GTB-html/source/xslt/gtb.xslt" binds="">
  <p.withPredicate>
   <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
   <axis vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="32" name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
  </p.withPredicate>
  <data vn="31" baseUri="file:/D:/code/GTB-html/source/xslt/gtb.xslt" ns="xsl=http://www.w3.org/1999/XSL/Transform ixsl=http://saxonica.com/ns/interactiveXSLT js=http://saxonica.com/ns/globalJS ivdnt=http://www.ivdnt.org/xslt/namespaces xs=http://www.w3.org/2001/XMLSchema array=http://www.w3.org/2005/xpath-functions/array" line="32">
   <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name=='id'"/>
  </data>
 </key>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ 8a0d8ed8?>
